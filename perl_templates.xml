<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template context="perl" description="Perl Script Starter" enabled="true" name="perl">#!${interpreter}
use strict;
use warnings;

${cursor}</template><template context="perl" description="Perl Package Starter" enabled="true" name="package">package ${packagename};

${cursor}</template><template context="perl" description="LogDebug" enabled="true" name="LogDebug">LogDebug( q{${Variable}:}, ${Variable});</template><template context="perl" description="eDoc of an epages package" enabled="true" name="# eDocPackage">#========================================================================================&#13;
# §package      DE_EPAGES::${package}&#13;
# §base         DE_EPAGES::${base}&#13;
# §state        public&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  &#13;
#----------------------------------------------------------------------------------------&#13;
# §example      &#13;
#========================================================================================</template><template context="perl" description="getter/setter method" enabled="true" name="subGetterSetter">sub ${var} {&#13;
    my $$self = shift;&#13;
    my ($$${var}) = @_;&#13;
    return $$self-&gt;{'${var}'} unless (defined($$${var}));&#13;
    $$self-&gt;{'${var}'} = $$${var};&#13;
}</template><template context="perl" description="foreach" enabled="true" name="foreach">foreach my $$${i} (@{${cursor}}){&#13;
    &#13;
}</template><template context="perl" description="eDoc of an epages function" enabled="true" name="# eDocFunction">#========================================================================================&#13;
# §function     ${Function}&#13;
# §state        ${public_private}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       ${Function}( $$${Input1} );&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  ${Description}&#13;
#----------------------------------------------------------------------------------------&#13;
# §input        $$${Input1} | ${Input1Description} | ${Input1Type_boolean_integer_String_object_ref_hash_refarray}&#13;
# §return       $$${ReturnVariable} | ${ReturnDescription} | ${ReturnType_boolean_integer_String_object_refhash_refarray}&#13;
#========================================================================================</template><template context="perl" description="subNew" enabled="true" name="subNew">sub new {&#13;
    my $$class = shift;&#13;
    my %args  = @_;&#13;
    my $$self  = bless {}, $$class;&#13;
    return $$self;&#13;
}</template><template context="perl" description="use Core::API::Log" enabled="true" name="useLogDebug">use DE_EPAGES::Core::API::Log qw ( ${LogDebug} ${cursor});</template><template context="perl" description="use Object::API::Factory" enabled="true" name="useFactory">use DE_EPAGES::Object::API::Factory qw ( ${LoadObject} ${LoadClassByAlias} ${cursor});</template><template context="perl" description="use Core::API::Error" enabled="true" name="useError">use DE_EPAGES::Core::API::Error qw ( ExistsError GetError ${cursor});</template><template context="perl" description="useWarning" enabled="true" name="useWarning">use DE_EPAGES::Core::API::Warning qw ( Warning BlockWarnings );</template><template context="perl" description="BlockWarnings" enabled="true" name="BlockWarnings">my $$aWarnings = BlockWarnings( sub {&#13;
    eval {&#13;
        ${cursor}&#13;
    };&#13;
    &#13;
   	Warning(GetError()) if (ExistsError());&#13;
});</template><template context="perl" description="DAL Method" enabled="true" name="LoadClassAndObjects">my $$Class    = LoadClassByAlias('${Classname}');&#13;
my $$a${List}  = $$Class-&gt;getObjects("By${Index}",[$$${Variable}]);</template><template context="perl" description="use PerlTools" enabled="true" name="usePerlTools">use DE_EPAGES::Core::API::PerlTools qw ( ${ElementOf} ${cursor});</template><template context="perl" description="ElementOf" enabled="true" name="ElementOf">ElementOf($$${Element},@${List})</template><template context="perl" description="get my $self" enabled="true" name="mySelfShift">my $$self = shift;</template><template context="perl" description="eval-Block" enabled="true" name="eval">eval {&#13;
    ${cursor}&#13;
};&#13;
if (ExistsError()) {&#13;
    my $$Error = GetError();&#13;
    print STDERR "WARNING: ". substr($$Error-&gt;shortMessage, 0, 4096) . "\n" unless ($$NoOutput);&#13;
    LogError($$Error);&#13;
}</template><template context="perl" description="use feature switch" enabled="true" name="useFeatureSwitch">use feature 'switch';</template><template context="perl" description="sub ErrorDefinition" enabled="true" name="subErrorDefinition">sub ErrorDefinition {&#13;
    return {&#13;
            '${ErrorCode}' =&gt; '${ErrorMessage}',&#13;
    };&#13;
}</template><template context="perl" description="perl package skeleton" enabled="true" name="PackageSkeleton">#========================================================================================&#13;
# §package      DE_EPAGES::${Package}&#13;
# §base         ${Base}&#13;
# §state        public&#13;
# §description  ${Description}&#13;
#========================================================================================&#13;
package DE_EPAGES::${Package};&#13;
use base ${Base};&#13;
&#13;
use strict;&#13;
&#13;
sub ${MySub} {&#13;
    ${cursor}&#13;
}&#13;
&#13;
1;</template><template context="perl" description="use TestParameter" enabled="true" name="useTestParameter">use DE_EPAGES::Core::API::TestParameter qw ( ${TestString} ${cursor});</template><template context="perl" description="use Cartridge::..ExistsCartridgeByPackage" enabled="true" name="useExistsCartridge">use DE_EPAGES::Cartridge::API::Table::Cartridge qw ( ExistsCartridgeByPackage );</template><template context="perl" description="existsCartridge" enabled="true" name="existsCartridge"># make sure that the cartridge is installed&#13;
unless (ExistsCartridgeByPackage('DE_EPAGES::${Cartridge}')) {&#13;
    print 'Store: '.$$StoreName.": Cartridge ${Cartridge} is not installed.\n" if ($$printOutput);&#13;
    return;&#13;
}</template><template context="perl" description="sub with shift self" enabled="true" name="subSelf">sub ${SubName} {&#13;
    my $$self = shift;&#13;
    my (${Arguments}) = @_;&#13;
    ${cursor}&#13;
}</template><template context="perl" description="Transaction" enabled="true" name="Transaction">Transaction(sub {&#13;
    ${cursor}&#13;
});</template><template context="perl" description="use Transaction" enabled="true" name="useTransaction">use DE_EPAGES::Object::API::Factory qw ( Transaction );</template><template context="perl" description="get System Variables" enabled="true" name="getSystemInfo">my $$hInfo = LoadRootObject()-&gt;get([qw( ${cursor} )]);</template><template context="perl" description="public sub with epages API doc" enabled="true" name="subPublic">#========================================================================================&#13;
# §function     ${Function}&#13;
# §state        ${public_private}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       ${Function}( $$${Input1} );&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  ${Description}&#13;
#----------------------------------------------------------------------------------------&#13;
# §input        $$${Input1} | ${Input1Description} | ${Input1Type_boolean_integer_String_object_ref_hash_refarray}&#13;
# §return       $$${ReturnVariable} | ${ReturnDescription} | ${ReturnType_boolean_integer_String_object_refhash_refarray}&#13;
#========================================================================================&#13;
sub ${Function} {&#13;
    my ($$${Input1}) = @_;&#13;
    my $$${ReturnVariable};&#13;
&#13;
    ${cursor}&#13;
    return $$${ReturnVariable};&#13;
}</template><template context="perl" description="get Object attributes into hInfo hash" enabled="true" name="getObjectInfo">my $$hInfo = ${Object}-&gt;get([qw( ${cursor} )]);</template><template context="perl" description="UI function" enabled="true" name="subUIAction">#========================================================================================&#13;
# §function     $$UI-&gt;${UIFunction}($$Servlet)&#13;
# §state        private&#13;
# §description  ${FunctionDescription}&#13;
#========================================================================================&#13;
sub ${UIFunction} {&#13;
    my $$self = shift;&#13;
    my $$Servlet = shift;&#13;
    my $$${Object} = $$Servlet-&gt;object;&#13;
    ${cursor}&#13;
}</template><template context="perl" description="getLog()-&gt;debug()" enabled="true" name="getLogDebug">GetLog()-&gt;debug(${cursor});</template><template context="perl" description="epages api doc §input" enabled="true" name="# §input"># §input        $$${Input1} | ${Input1Description} | ${Input1Type_boolean_integer_String_object_ref_hash_refarray}</template><template context="perl" description="epages api doc §return" enabled="true" name="# §return"># §return       $$${ReturnVariable} | ${ReturnDescription} | ${ReturnType_boolean_integer_String_object_refhash_refarray}</template><template context="perl" description="read $Servlet from argument list" enabled="true" name="myServlet">my ($$Servlet) = @_;</template><template context="perl" description="XML::SAX::Handler for element with getCharacters" enabled="true" name="subSAX_characters"># xml tag &lt;${Element}&gt;&#13;
sub start_${Element} { shift-&gt;collectCharacters(1); } ## no critic (RequireArgUnpacking)&#13;
# xml tag &lt;/${Element}&gt; - fetch characters&#13;
sub end_${Element} {&#13;
    my $$self = shift;&#13;
    my $$Obj = $$self-&gt;topID('${Parent}');&#13;
    $$Obj-&gt;${Element}($$self-&gt;getCharactersEnd());&#13;
}</template><template context="perl" description="empty element" enabled="true" name="subSAX_empty"># xml tag &lt;${Element}&gt; ignored.&#13;
sub start_${Element} {}</template><template context="perl" description="read elements from argument list" enabled="true" name="mySubArgs">my (${Arguments}) = @_;</template><template context="perl" description="stack handling method" enabled="true" name="subStack">sub push${var} {&#13;
    my $$self = shift;&#13;
    my ($$${var}) = @_;&#13;
    push @{$$self-&gt;{'${var}List'}}, $$${var};&#13;
}&#13;
    &#13;
sub pop${var} { &#13;
    my $$self = shift;&#13;
    return pop @{$$self-&gt;{'${var}List'}};&#13;
}&#13;
&#13;
sub ${var}List {&#13;
    my $$self = shift;&#13;
    return $$self-&gt;{'${var}List'}//[];&#13;
}</template><template context="perl" description="XML::SAX::Handler for complex elements" enabled="true" name="subSAX_complex"># xml tag &lt;${Element}&gt;&#13;
sub start_${Element} {&#13;
    my $$self = shift;&#13;
    my ($$Element) = @_;&#13;
    $$self-&gt;pushID('${Element}',DE_EPAGES::AvaTax::API::DTO::${Element}-&gt;new);&#13;
}&#13;
&#13;
#xml tag &lt;/${Element}&gt;&#13;
sub end_${Element} {&#13;
    my $$self = shift;&#13;
    my $$${Element} = $$self-&gt;popID('${Parent}');&#13;
    my $$Obj = $$self-&gt;topID('${Parent}');&#13;
    $$Obj-&gt;${Element}($$${Element});&#13;
    # for root element use:&#13;
    #$$self-&gt;ParseResult($$self-&gt;popID('${Element}'));&#13;
}</template><template context="perl" description="use constant var =&gt; content" enabled="true" name="useconst">use constant ${CONST_NAME} =&gt; ${CONST_CONTENT};</template><template context="perl" description="if" enabled="true" name="if">if (${Condition}) {&#13;
    ${cursor}&#13;
}</template><template context="perl" description="if else" enabled="true" name="ifelse">if (${Condition}) {&#13;
    ${cursor}&#13;
} else {&#13;
    &#13;
}</template><template context="perl" description="perl switch statement" enabled="true" name="givenWhen">given (${Val}) {&#13;
    when (${Statement}) { ${Expr} }&#13;
    ${cursor}&#13;
    default { }&#13;
}</template><template context="perl" description="when case" enabled="true" name="when">when (${String}) {&#13;
    ${cursor}&#13;
}</template><template context="perl" description="TestObject" enabled="true" name="TestObject">TestObject('${Object}',$$${Object},'${Package}::API::Object::${Object}');</template><template context="perl" description="HookFunction" enabled="true" name="HookFunction">#========================================================================================&#13;
# §function     On${Hook}&#13;
# §state        public&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       On${Hook}($$hParams);&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  ${Hook} triggered, ${Description}&#13;
#----------------------------------------------------------------------------------------&#13;
# §input        $$hParams | hook arguments, used keys are&#13;
#               &lt;ul&gt;&#13;
#                   &lt;li&gt;Object - object&#13;
#               &lt;/ul&gt; | ref.hash.*&#13;
#========================================================================================&#13;
sub On${Hook} {&#13;
    my ($$hParams) = @_;&#13;
    ${cursor}&#13;
}</template><template context="perl" description="iterate over stringattributes via sql" enabled="true" name="sqlStringAttribute">my $$dbi = GetCurrentDBHandle();&#13;
my $$sql = &lt;&lt;SQL;&#13;
select sa.attributeobjectid, sa.value &#13;
from stringattribute sa&#13;
inner join attribute a on a.attributeid=sa.attributeid&#13;
inner join object co on co.objectid=a.attributeclassid&#13;
inner join object ao on ao.objectid=a.attributeid&#13;
where co.alias='${Class}'&#13;
and ao.alias='${Attribute}'&#13;
SQL&#13;
&#13;
my $$dbResult = $$dbi-&gt;execute($$sql);&#13;
foreach my $$Row (@$$dbResult) {&#13;
    ${cursor}&#13;
}</template><template context="perl" description="use DE_EPAGES::Database::API::Connection" enabled="true" name="useDBI">use DE_EPAGES::Database::API::Connection qw ( GetCurrentDBHandle );</template><template context="perl" description="Frame comment for code structure commentation" enabled="true" name="# Frame Comment">#---------------------------------------------------------------------------
#  ${cursor}
#---------------------------------------------------------------------------</template><template context="perl" description="POD block from begin to end" enabled="true" name="=pod / =cut">=pod

${cursor}

=cut</template><template context="perl" description="End of POD block" enabled="true" name="=cut">=cut

${cursor}</template><template context="perl" description="Formatting region text/code/data" enabled="true" name="=for / =cut">=for ${formatname}

${cursor}

=end ${formatname}</template><template context="perl" description="HTML documentation" enabled="true" name="=begin html / =end">=begin  html

${cursor}

=end    html  #  back to Perl</template><template context="perl" description="man pages documentation" enabled="true" name="=begin man / =end">=begin  man 

${cursor}

=end    man   #  back to Perl</template><template context="perl" description="plain text documentation" enabled="true" name="=begin text / =end">=begin  text

${cursor}

=end    text  #  back to Perl</template><template context="perl" description="headline 1" enabled="true" name="=head1">=head1 ${cursor}</template><template context="perl" description="headline 2" enabled="true" name="=head2">=head2 ${cursor}</template><template context="perl" description="headline 3" enabled="true" name="=head3">=head3 ${cursor}</template><template context="perl" description="list" enabled="true" name="=over .. =back">=over ${indent level}

=item *

${cursor}

=item *



=back</template><template context="perl" description="list item" enabled="true" name="=item *">=item *

${cursor}</template><template context="perl" description="bold" enabled="true" name="= B&lt;&gt;">B&lt;${cursor}&gt;</template><template context="perl" description="literal" enabled="true" name="= C&lt;&gt;">C&lt;${cursor}&gt;</template><template context="perl" description="escape" enabled="true" name="= E&lt;&gt;">E&lt;${cursor}&gt;</template><template context="perl" description="filename" enabled="true" name="= F&lt;&gt;">F&lt;${cursor}&gt;</template><template context="perl" description="italic" enabled="true" name="= I&lt;&gt;">I&lt;${cursor}&gt;</template><template context="perl" description="link" enabled="true" name="= L&lt;&gt;">L&lt;${cursor}|&gt;</template><template context="perl" description="nobr. spaces" enabled="true" name="= S&lt;&gt;">S&lt;${cursor}&gt;</template><template context="perl" description="index" enabled="true" name="= X&lt;&gt;">X&lt;${cursor}&gt;</template><template context="perl" description="zero-width" enabled="true" name="= Z&lt;&gt;">Z&lt;${cursor}&gt;</template><template context="perl" description="do while loop" enabled="true" name="do-while">do {
    ${cursor}
} 
while ( ${condition} );</template><template context="perl" description="for loop" enabled="true" name="for">for ( ${begin}; ${condition}; ${end} ) {
    ${cursor}
}</template><template context="perl" description="unless condition" enabled="true" name="unless">unless ( ${condition} ) {
    ${cursor}
}</template><template context="perl" description="unless else condition" enabled="true" name="unless-else">unless ( ${condition} ) {
    ${cursor}
} else {
    
}</template><template context="perl" description="until-loop" enabled="true" name="until">until ( ${condition} ) {
	${cursor}
}</template><template context="perl" description="while loop" enabled="true" name="while">while ( ${condition} ) {
    ${cursor}
}</template><template context="perl" description="Scalar declaration" enabled="true" name="my $scalar">my $$${scalar}</template><template context="perl" description="Scalar definition" enabled="true" name="my $scalar = value">my $$${scalar} = ${value};</template><template context="perl" description="List of scalars definition" enabled="true" name="my ($scalar1, $scalar2, $scalar3);">my ($$${scalar1}, $$${scalar2}, $$${scalar3} );</template><template context="perl" description="Array declaration" enabled="true" name="my array">my @${array};</template><template context="perl" description="Array definition" enabled="true" name="my array = ()">my @${array} = (${values});</template><template context="perl" description="hash declaration" enabled="true" name="my %">my %${hash};</template><template context="perl" description="hash definition" enabled="true" name="my %hash = ( )">my %${hash}=(
    '${key1}'  =&gt; ${value1},
    ${cursor}
);</template><template context="perl" description="hash reference definition" enabled="true" name="my $hashref = {}">my $$h${Hash} = {
    '${Key1}' =&gt; ${Value1},
    ${cursor}
};</template><template context="perl" description="Test regular expression" enabled="true" name="regex match">$${var} =~ m/${regex}/</template><template context="perl" description="Test regular expression" enabled="true" name="regex missmatch">$${var} !~ m/${regex}/</template><template context="perl" description="Replace with regular expression" enabled="true" name="regex replace">$$${var} =~ s/${reg_search}/${reg_replace}/</template><template context="perl" description="Replace with transliteration" enabled="true" name="transliteration">$$${var} =~ tr/${source}/${replace}/</template><template context="perl" description="Subroutine" enabled="true" name="sub">sub ${name} {
    my ($$${Arguments}) = @_;
    ${cursor}
}</template><template context="perl" description="Open input file" enabled="true" name="open input file">my	$$INFILE_filename = '${filename}'; # input file name

open ( INFILE, '&lt;', $$INFILE_filename )
or die  "$$0 : failed to open  input file $$INFILE_filename : $$!\n";


close ( INFILE )
	or warn "$$0 : failed to close input file $$INFILE_filename : $$!\n";</template><template context="perl" description="Open output file" enabled="true" name="open output file">my	$$OUTFILE_filename = '${filename}'; # output file name

open ( OUTFILE, '&gt;', $$OUTFILE_filename ) or 
	die  "$$0 : failed to open  output file $$OUTFILE_filename : $$!\n";


close ( OUTFILE )
	or warn "$$0 : failed to close output file $$OUTFILE_filename : $$!\n";</template><template context="perl" description="Open pipe" enabled="true" name="open pipe">my	$$PIPE_command = '${pipecommand}'; # pipe command

open ( PIPE, $$PIPE_command )
	or die  "$$0 : failed to open  pipe &gt; $$PIPE_command &lt; : $$!\n";


close ( PIPE )
	or warn "$$0 : failed to close pipe &gt; $$PIPE_command &lt; : $$!\n";</template><template context="perl" description="Assign a here document to a variable" enabled="true" name="heredoc">my $$${herevar} = &lt;&lt;${HEREMARK};
${cursor}
${HEREMARK}</template><template context="perl" description="The time at which the script began running, in seconds since the epoch." enabled="true" name="$^T ">$$^T</template><template context="perl" description="The time at which the script began running, in seconds since the epoch." enabled="true" name="$BASETIME (long version)">$$BASETIME</template><template context="perl" description="The time at which the script began running, in seconds since the epoch." enabled="true" name="$BASETIME (short version)">$$^T</template><template context="perl" description="Name of the Perl script file name being executed." enabled="true" name="$0">$$0</template><template context="perl" description="Name of the Perl script file name being executed." enabled="true" name="$PROGRAM_NAME (long version)">$$PROGRAM_NAME</template><template context="perl" description="Name of the Perl script file name being executed." enabled="true" name="$PROGRAM_NAME (short version)">$$0</template><template context="perl" description="Current value of the write accumulator for format lines. " enabled="true" name="$^A">$$^A</template><template context="perl" description="Current value of the write accumulator for format lines. " enabled="true" name="$ACCUMULATOR (long version)">$$ACCUMULATOR</template><template context="perl" description="Current value of the write accumulator for format lines. " enabled="true" name="$ACCUMULATOR (short version)">$$^A</template><template context="perl" description="Default input and pattern searching variable." enabled="true" name="$_">$$_</template><template context="perl" description="Default input and pattern searching variable." enabled="true" name="$ARG (long version)">$$ARG</template><template context="perl" description="Default input and pattern searching variable." enabled="true" name="$ARG (short version)">$$_</template><template context="perl" description="The array containing the command-line arguments intended for the script. " enabled="true" name="@ARGV">@ARGV</template><template context="perl" description="Current value of the debugging flags." enabled="true" name="$^D">$$^D</template><template context="perl" description="Current value of the debugging flags." enabled="true" name="$DEBUGGING (long version)">$$DEBUGGING</template><template context="perl" description="Current value of the debugging flags." enabled="true" name="$DEBUGGING (short version)">$$^D</template><template context="perl" description="Effective gid of this process." enabled="true" name="$)">$$)</template><template context="perl" description="Effective gid of this process" enabled="true" name="$EFFECTIVE_GROUP_ID (long version)">$$EFFECTIVE_GROUP_ID</template><template context="perl" description="Effective gid of this process" enabled="true" name="$EFFECTIVE_GROUP_ID (short version)">$$)</template><template context="perl" description="Effective gid of this process" enabled="true" name="$EGID (long version)">$EGID)</template><template context="perl" description="Effective gid of this process" enabled="true" name="$EGID (short version)">$$)</template><template context="perl" description="Effective uid of this process." enabled="true" name="$&gt;">$$&gt;</template><template context="perl" description="Effective uid of this process." enabled="true" name="$EFFECTIVE_USER_ID (long version)">$$EFFECTIVE_USER_ID</template><template context="perl" description="Effective uid of this process." enabled="true" name="$EFFECTIVE_USER_ID (short version)">$$&gt;</template><template context="perl" description="Effective uid of this process." enabled="true" name="$EUID (long version)">$$EUID</template><template context="perl" description="Effective uid of this process." enabled="true" name="$EUID (short version)">$$&gt;</template><template context="perl" description="line number of the last file handle that was read.'" enabled="true" name="$.'">$$.</template><template context="perl" description="line number of the last file handle that was read.'" enabled="true" name="$INPUT_LINE_NUMBER (long version)">'$$.'</template><template context="perl" description="line number of the last file handle that was read.'" enabled="true" name="$INPUT_LINE_NUMBER (short version)">'Current</template><template context="perl" description="Current line number of the last file handle that was read." enabled="true" name="$NR (long version)">$$NR</template><template context="perl" description="Current line number of the last file handle that was read." enabled="true" name="$. (short version)">$$.</template><template context="perl" description="Output field separator for the print operator" enabled="true" name="$,">$$,</template><template context="perl" description="Output field separator for the print operator" enabled="true" name="$OUTPUT_FIELD_SEPARATOR (long version)">$$OUTPUT_FIELD_SEPARATOR</template><template context="perl" description="Output field separator for the print operator" enabled="true" name="$OUTPUT_FIELD_SEPARATOR (short version)">$$,</template><template context="perl" description="Output field separator for the print operator" enabled="true" name="$OFS (long version)">$$OFS</template><template context="perl" description="Output field separator for the print operator" enabled="true" name="$OFS (short version)">$$,</template><template context="perl" description="Input separator. Default=newline." enabled="true" name="$/">$$/</template><template context="perl" description="Input separator. Default=newline." enabled="true" name="$INPUT_RECORD_SEPARATOR (long version)">$$INPUT_RECORD_SEPARATOR</template><template context="perl" description="Input separator. Default=newline." enabled="true" name="$INPUT_RECORD_SEPARATOR (short version)">$$/</template><template context="perl" description="Input separator. Default=newline." enabled="true" name="$RS (long version)">$$RS</template><template context="perl" description="Input separator. Default=newline." enabled="true" name="$RS (short version)">$$/</template><template context="perl" description="Output record separator. Default=newline" enabled="true" name="$ ">$$</template><template context="perl" description="Output record separator. Default=newline" enabled="true" name="$OUTPUT_RECORD_SEPARATOR (long version)">$$OUTPUT_RECORD_SEPARATOR</template><template context="perl" description="Output record separator. Default=newline" enabled="true" name="$OUTPUT_RECORD_SEPARATOR (short version)">$$\</template><template context="perl" description="Output record separator. Default=newline" enabled="true" name="$ORS (long version)">$$ORS</template><template context="perl" description="Output record separator. Default=newline" enabled="true" name="$ORS (short version)">$$</template><template context="perl" description="Applies to list values interpolated into a double quoted string" enabled="true" name="$LIST_SEPARATOR">$$LIST_SEPARATOR;</template><template context="perl" description="Subscript separator for multidimensional array emulation. Default=034." enabled="true" name="$;">$$;</template><template context="perl" description="Subscript separator for multidimensional array emulation. Default=034." enabled="true" name="$SUBSCRIPT_SEPARATOR (long version)">$$SUBSCRIPT_SEPARATOR</template><template context="perl" description="Subscript separator for multidimensional array emulation. Default=034." enabled="true" name="$SUBSCRIPT_SEPARATOR (short version)">$$;</template><template context="perl" description="Subscript separator for multidimensional array emulation. Default=034." enabled="true" name="$SUBSEP (long version)">$$SUBSEP</template><template context="perl" description="Subscript separator for multidimensional array emulation. Default=034." enabled="true" name="$SUBSEP (short version)">$$;</template><template context="perl" description="Format output character for formfeed. Default=f." enabled="true" name="$^L">$$^L</template><template context="perl" description="Format output character for formfeed. Default=f." enabled="true" name="$FORMAT_FORMFEED (long version)">$$FORMAT_FORMFEED</template><template context="perl" description="Format output character for formfeed. Default=f." enabled="true" name="$FORMAT_FORMFEED (short version)">$$^L</template><template context="perl" description="Set of characters meaning a line break (next line starting with ^)in a format. Default=n." enabled="true" name="$:">$$:</template><template context="perl" description="Set of characters meaning a line break (next line starting with ^)in a format. Default=n." enabled="true" name="$FORMAT_LINE_BREAK_CHARACTERS (long version)">$$FORMAT_LINE_BREAK_CHARACTERS</template><template context="perl" description="Set of characters meaning a line break (next line starting with ^)in a format. Default=n." enabled="true" name="$FORMAT_LINE_BREAK_CHARACTERS (short version)">$$:</template><template context="perl" description="Output format for printed numbers (deprecated)." enabled="true" name="$#">$$#</template><template context="perl" description="Output format for printed numbers (deprecated)." enabled="true" name="$OFMT (long version)">$$OFMT</template><template context="perl" description="Output format for printed numbers (deprecated)." enabled="true" name="$OFMT (short version)">$$#</template><template context="perl" description="Return value from last pipe close, backtick (``) command, system operator." enabled="true" name="$?">$$?</template><template context="perl" description="Return value from last pipe close, backtick (``) command, system operator." enabled="true" name="$CHILD_ERROR (long version)">$$CHILD_ERROR</template><template context="perl" description="Return value from last pipe close, backtick (``) command, system operator." enabled="true" name="$CHILD_ERROR (short version)">$$?</template><template context="perl" description="Last System Error; Numeric context: errno no; string context: system error string." enabled="true" name="$!">$$!</template><template context="perl" description="Last System Error: Numeric context: errno no; string context: system error string." enabled="true" name="$ERRNO (long version)">$$ERRNO</template><template context="perl" description="Last System Error: Numeric context: errno no; string context: system error string." enabled="true" name="$ERRNO (short version)">$$!</template><template context="perl" description="Last System Error; Numeric context: errno no; string context: system error string." enabled="true" name="$OS_ERROR (long version)">$$OS_ERROR</template><template context="perl" description="Last System Error; Numeric context: errno no; string context: system error string." enabled="true" name="$OS_ERROR (short version)">$$!</template><template context="perl" description="Syntax error message from the last eval command" enabled="true" name="$@">$$@</template><template context="perl" description="Syntax error message from the last eval command" enabled="true" name="$EVAL_ERROR (long version)">$$EVAL_ERROR</template><template context="perl" description="Syntax error message from the last eval command" enabled="true" name="$EVAL_ERROR (short version)">$$@</template><template context="perl" description="The pid of the running perl this script." enabled="true" name="$$">$$$$</template><template context="perl" description="The pid of the running perl this script." enabled="true" name="$PROCESS_ID (long version)">$$PROCESS_ID</template><template context="perl" description="The pid of the running perl this script." enabled="true" name="$PROCESS_ID (short version)">$$$$</template><template context="perl" description="The pid of the running perl this script." enabled="true" name="$PID (long version)">$$PID</template><template context="perl" description="The pid of the running perl this script." enabled="true" name="$PID (short version)">$$$$</template><template context="perl" description="Real user ID (uid) of running perl script." enabled="true" name="$&lt;">$$&lt;</template><template context="perl" description="Real user ID (uid) of running perl script." enabled="true" name="$REAL_USER_ID (long version)">$$REAL_USER_ID</template><template context="perl" description="Real user ID (uid) of running perl script." enabled="true" name="$REAL_USER_ID (short version)">$$&lt;</template><template context="perl" description="Real user ID (uid) of running perl script." enabled="true" name="$UID (long version)">$$UID</template><template context="perl" description="Real user ID (uid) of running perl script." enabled="true" name="$UID (short version)">$$&lt;</template><template context="perl" description="Real group ID (gid) of running perl script." enabled="true" name="$(">$$(</template><template context="perl" description="Real group ID (gid) of running perl script." enabled="true" name="$REAL_GROUP_ID (long version)">$$REAL_GROUP_ID</template><template context="perl" description="Real group ID (gid) of running perl script." enabled="true" name="$REAL_GROUP_ID (short version)">$$(</template><template context="perl" description="Real group ID (gid) of running perl script." enabled="true" name="$GID (long version)">$$GID</template><template context="perl" description="Real group ID (gid) of running perl script." enabled="true" name="$GID (short version)">$$(</template><template context="perl" description="Index of the first element in an array / the first character in a substring. Default=0" enabled="true" name="$[">$$[</template><template context="perl" description="Perl version plus patchlevel divided by 1000." enabled="true" name="$]">$$]</template><template context="perl" description="The revision, version, and subversion of the Perl interpreter" enabled="true" name="$^V">$^V</template><template context="perl" description="The revision, version, and subversion of the Perl interpreter" enabled="true" name="$PERL_VERSION (long version)">$$PERL_VERSION</template><template context="perl" description="The revision, version, and subversion of the Perl interpreter" enabled="true" name="$PERL_VERSION (short version)">$^V</template><template context="perl" description="Extended error message (platform depending)." enabled="true" name="$^E">$$^E</template><template context="perl" description="Extended error message (platform depending)." enabled="true" name="$EXTENDED_OS_ERROR (long version)">$$EXTENDED_OS_ERROR</template><template context="perl" description="Extended error message (platform depending)." enabled="true" name="$EXTENDED_OS_ERROR (short version)">$$^E</template><template context="perl" description="Maximum system file descriptor." enabled="true" name="$^F">$$^F</template><template context="perl" description="Maximum system file descriptor." enabled="true" name="$SYSTEM_FD_MAX (long version)">$$SYSTEM_FD_MAX</template><template context="perl" description="Maximum system file descriptor." enabled="true" name="$SYSTEM_FD_MAX (short version)">$$^F</template><template context="perl" description="Internal compiler hints enabled by some modules. " enabled="true" name="$^H">$$^H</template><template context="perl" description="Value of the inplace-edit extension. Use undef to disable inplace editing." enabled="true" name="$^I">$$^I</template><template context="perl" description="Value of the inplace-edit extension. Use undef to disable inplace editing." enabled="true" name="$INPLACE_EDIT (long version)">$$INPLACE_EDIT</template><template context="perl" description="Value of the inplace-edit extension. Use undef to disable inplace editing." enabled="true" name="$INPLACE_EDIT (short version)">$$^I</template><template context="perl" description="Contents can be used as an emergency memory pool in case of out-of-memory error. Requires a special compilation of Perl." enabled="true" name="$^M">$$^M</template><template context="perl" description="Name of the operating ystem Perl binary was compiled for." enabled="true" name="$^O">$$^O</template><template context="perl" description="Name of the operating ystem Perl binary was compiled for." enabled="true" name="$OSNAME (long version)">$$OSNAME</template><template context="perl" description="Name of the operating ystem Perl binary was compiled for." enabled="true" name="$OSNAME (short version)">$$^O</template><template context="perl" description="Internal flag, cleared by debugger to not debug itself." enabled="true" name="$^P">$$^P</template><template context="perl" description="Internal flag, cleared by debugger to not debug itself." enabled="true" name="$PERLDB (long version)">$$PERLDB</template><template context="perl" description="Internal flag, cleared by debugger to not debug itself." enabled="true" name="$PERLDB (short version)">$$^P</template><template context="perl" description="The result of evaluation of the last successful (?{ code }) regular expression assertion." enabled="true" name="$^R">$$^R</template><template context="perl" description="The result of evaluation of the last successful (?{ code }) regular expression assertion." enabled="true" name="$LAST_REGEXP_CODE_RESULT (long version)">$$LAST_REGEXP_CODE_RESULT</template><template context="perl" description="The result of evaluation of the last successful (?{ code }) regular expression assertion." enabled="true" name="$LAST_REGEXP_CODE_RESULT (short version)">$$^R</template><template context="perl" description="Current state of the interpreter." enabled="true" name="$^S">$$^S</template><template context="perl" description="Current state of the interpreter." enabled="true" name="$EXCEPTIONS_BEING_CAUGHT (long version)">$$EXCEPTIONS_BEING_CAUGHT</template><template context="perl" description="Current state of the interpreter." enabled="true" name="$EXCEPTIONS_BEING_CAUGHT (short version)">$$^S</template><template context="perl" description="The current value of the warning switch, either true or false." enabled="true" name="$^W">$$^W</template><template context="perl" description="The current value of the warning switch, either true or false." enabled="true" name="$WARNING (long version)">$$WARNING</template><template context="perl" description="The current value of the warning switch, either true or false." enabled="true" name="$WARNING (short version)">$$^W</template><template context="perl" description="Perls name that itself was executed as." enabled="true" name="$^X">$$^X</template><template context="perl" description="Perls name that itself was executed as." enabled="true" name="$EXECUTABLE_NAME (long version)">$$EXECUTABLE_NAME</template><template context="perl" description="Perls name that itself was executed as." enabled="true" name="$EXECUTABLE_NAME (short version)">$$^X</template><template context="perl" description="Name of the current file when reading from &lt;ARGV&gt;." enabled="true" name="$ARGV">$$ARGV</template><template context="perl" description="List of library directories, used by do, require, or use constructs. " enabled="true" name="@INC">@INC</template><template context="perl" description="Hash containing filename of each file that has been included by do or require." enabled="true" name="%INC">%INC</template><template context="perl" description="Array into which the input lines are split when the -a command-line switch is given. " enabled="true" name="@F">@F</template><template context="perl" description="Hash containing current environment variables." enabled="true" name="%ENV">%ENV</template><template context="perl" description="Hash used to set signal handlers for various signals." enabled="true" name="%SIG">%SIG</template><template context="perl" description="Value of the default handler for a signal" enabled="true" name="handler DEFAULT">DEFAULT</template><template context="perl" description="Value of the default handler for a signal" enabled="true" name="DEFAULT">DEFAULT</template><template context="perl" description="Signal handler value to ignore the signal" enabled="true" name="handler IGNORE">IGNORE</template><template context="perl" description="Signal handler value to ignore the signal" enabled="true" name="IGNORE">IGNORE</template><template context="perl" description="POSIX signal End process (abort). Example: $SIG{ABRT}='my_sigabrt_handler';" enabled="true" name="signal (POSIX) ABRT">ABRT</template><template context="perl" description="POSIX signal Alarm clock. Example: $SIG(ALRM)='my_sigalrm_handler'" enabled="true" name="signal (POSIX) ALRM">ALRM</template><template context="perl" description="POSIX signal Example: $SIG(CHLD). Example: $SIG(CHLD)='my_sigchld_handler'" enabled="true" name="signal (POSIX) CHLD">CHLD</template><template context="perl" description="POSIX signal Example: $SIG(CONT)='my_sigcont_handler'" enabled="true" name="signal (POSIX) CONT">CONT</template><template context="perl" description="POSIX signal Floating-point exception. Example: $SIG(FPE)='my_sigfpe_handler'" enabled="true" name="signal (POSIX) FPE">FPE</template><template context="perl" description="POSIX signal Hangup. Example: $SIG(HUP)='my_sighup_handler'" enabled="true" name="signal (POSIX) HUP">HUP</template><template context="perl" description="POSIX signal Illegal instruction. Example: $SIG(ILL)='my_sigill_handler'" enabled="true" name="signal (POSIX) ILL">ILL</template><template context="perl" description="POSIX signal Interrupt. Example: $SIG(INT)='my_sigint_handler'" enabled="true" name="signal (POSIX) INT">INT</template><template context="perl" description="POSIX signal Kill (cannot be caught or ignored)." enabled="true" name="signal (POSIX) KILL">KILL</template><template context="perl" description="POSIX signal Write on a pipe when there is no process to read it. Example: $SIG(PIPE)='my_sigpipe_handler'" enabled="true" name="signal (POSIX) PIPE">PIPE</template><template context="perl" description="POSIX signal Quit. Example: $SIG(QUIT)='my_sigquit_handler'" enabled="true" name="signal (POSIX) QUIT">QUIT</template><template context="perl" description="POSIX signal Segmentation violation. Example: $SIG(SEGV)='my_sigsegv_handler'" enabled="true" name="signal (POSIX) SEGV">SEGV</template><template context="perl" description="POSIX signal Stop (cannot be caught or ignored)." enabled="true" name="signal (POSIX) STOP">STOP</template><template context="perl" description="POSIX signal Software termination signal. Example: $SIG(TERM)='my_sigterm_handler'" enabled="true" name="signal (POSIX) TERM">TERM</template><template context="perl" description="POSIX signal Interactive stop. Example: $SIG(TSTP)='my_sigtstp_handler'" enabled="true" name="signal (POSIX) TSTP">TSTP</template><template context="perl" description="POSIX signal Background read attempted from control terminal. Example: $SIG(TTIN)='my_sigttin_handler'" enabled="true" name="signal (POSIX) TTIN">TTIN</template><template context="perl" description="POSIX signal Background write attempted from control terminal. Example: $SIG(TTOU)='my_sigttou_handler'" enabled="true" name="signal (POSIX) TTOU">TTOU</template><template context="perl" description="POSIX signal User-defined signal 1. Example: $SIG(USR1)='my_sigusr1_handler'" enabled="true" name="signal (POSIX) USR1">USR1</template><template context="perl" description="POSIX signal User-defined signal 2. Example: $SIG(USR2)='my_sigusr2_handler'" enabled="true" name="signal (POSIX) USR2">USR2</template><template context="perl" description="Filehandle that iterates over command line filenames in @ARGV. Usually written as the null filehandle in &lt;&gt;." enabled="true" name="&lt;ARGV&gt;">&lt;ARGV&gt;</template><template context="perl" description="Standard error output stream" enabled="true" name="&lt;STDERR&gt;">&lt;STDERR&gt;</template><template context="perl" description="Standard input stream" enabled="true" name="&lt;STDIN&gt;">&lt;STDIN&gt;</template><template context="perl" description="Standard output stream" enabled="true" name="&lt;STDOUT&gt;">&lt;STDOUT&gt;</template><template context="perl" description="The special filehandle that refers to anything following the __END__ token in the file containing the script." enabled="true" name="&lt;DATA&gt;">&lt;DATA&gt;</template><template context="perl" description="Contains the text matched by the corresponding set of parentheses in the last pattern matched." enabled="true" name="$digit">$$digit</template><template context="perl" description="The string matched by the last successful pattern match." enabled="true" name="$&amp;">$$&amp;</template><template context="perl" description="The string matched by the last successful pattern match." enabled="true" name="$MATCH (long version)">$$MATCH</template><template context="perl" description="The string matched by the last successful pattern match." enabled="true" name="$MATCH (short version)">$$&amp;</template><template context="perl" description="The string preceding whatever was matched by the last successful pattern match." enabled="true" name="$`">$$`</template><template context="perl" description="The string preceding whatever was matched by the last successful pattern match." enabled="true" name="$PREMATCH (long version)">$$PREMATCH</template><template context="perl" description="The string preceding whatever was matched by the last successful pattern match." enabled="true" name="$PREMATCH (short version)">$$`</template><template context="perl" description="The string following whatever was matched by the last successful pattern match." enabled="true" name="$'">$$'</template><template context="perl" description="The string following whatever was matched by the last successful pattern match." enabled="true" name="$POSTMATCH (long version)">$$POSTMATCH</template><template context="perl" description="The string following whatever was matched by the last successful pattern match." enabled="true" name="$POSTMATCH (short version)">$$'</template><template context="perl" description="The last bracket matched by the last search pattern." enabled="true" name="$+">$$+</template><template context="perl" description="The last bracket matched by the last search pattern." enabled="true" name="$LAST_PAREN_MATCH (long version)">$$LAST_PAREN_MATCH</template><template context="perl" description="The last bracket matched by the last search pattern." enabled="true" name="$LAST_PAREN_MATCH (short version)">$$+</template><template context="perl" description="If set to nonzero, forces an fflush(3) after every write or print on the currently selected output channel." enabled="true" name="$|">$$|</template><template context="perl" description="If set to nonzero, forces an fflush(3) after every write or print on the currently selected output channel." enabled="true" name="$OUTPUT_AUTOFLUSH (long version)">$$OUTPUT_AUTOFLUSH</template><template context="perl" description="If set to nonzero, forces an fflush(3) after every write or print on the currently selected output channel." enabled="true" name="$OUTPUT_AUTOFLUSH (short version)">$$|</template><template context="perl" description="The current page number of the currently selected output channel." enabled="true" name="$%">$$%</template><template context="perl" description="The current page number of the currently selected output channel." enabled="true" name="$FORMAT_PAGE_NUMBER (long version)">$$FORMAT_PAGE_NUMBER</template><template context="perl" description="The current page number of the currently selected output channel." enabled="true" name="$FORMAT_PAGE_NUMBER (short version)">$$%</template><template context="perl" description="The current page length (printable lines) of the currently selected output channel. Default is 60." enabled="true" name="$=">$$=</template><template context="perl" description="The current page length (printable lines) of the currently selected output channel. Default is 60." enabled="true" name="$FORMAT_LINES_PER_PAGE (long version)">$$FORMAT_LINES_PER_PAGE</template><template context="perl" description="The current page length (printable lines) of the currently selected output channel. Default is 60." enabled="true" name="$FORMAT_LINES_PER_PAGE (short version)">$$=</template><template context="perl" description="The number of lines left on the page of the currently selected output channel." enabled="true" name="$-">$$-</template><template context="perl" description="The number of lines left on the page of the currently selected output channel." enabled="true" name="$FORMAT_LINES_LEFT (long version)">$$FORMAT_LINES_LEFT</template><template context="perl" description="The number of lines left on the page of the currently selected output channel." enabled="true" name="$FORMAT_LINES_LEFT (short version)">$$-</template><template context="perl" description="The name of the current report format for the currently selected output channel. Default is the name of the filehandle." enabled="true" name="$~">$$~</template><template context="perl" description="The name of the current report format for the currently selected output channel. Default is the name of the filehandle." enabled="true" name="$FORMAT_NAME (long version)">$$FORMAT_NAME</template><template context="perl" description="The name of the current report format for the currently selected output channel. Default is the name of the filehandle." enabled="true" name="$FORMAT_NAME (short version)">$$~</template><template context="perl" description="The name of the current top-of-page format for the currently selected output channel. Default is the name of the filehandle with _TOP appended." enabled="true" name="$^">$$^</template><template context="perl" description="The name of the current top-of-page format for the currently selected output channel. Default is the name of the filehandle with _TOP appended." enabled="true" name="$FORMAT_TOP_NAME (long version)">$$FORMAT_TOP_NAME</template><template context="perl" description="The name of the current top-of-page format for the currently selected output channel. Default is the name of the filehandle with _TOP appended." enabled="true" name="$FORMAT_TOP_NAME (short version)">$$^</template><template context="perl" description="Array holds the offsets of the ends of the last successful submatches." enabled="true" name="@+">$@+</template><template context="perl" description="Array holds the offsets of the ends of the last successful submatches." enabled="true" name="@LAST_MATCH_END (long version)">$@LAST_MATCH_END</template><template context="perl" description="Array holds the offsets of the ends of the last successful submatches." enabled="true" name="@LAST_MATCH_END (short version)">$@+</template><template context="perl" description="Offsets of the start of the substring matched by each subpatterns." enabled="true" name="@-">$@-</template><template context="perl" description="Offsets of the start of the substring matched by each subpatterns." enabled="true" name="@LAST_MATCH_START (long version)">$@LAST_MATCH_START</template><template context="perl" description="Offsets of the start of the substring matched by each subpatterns." enabled="true" name="@LAST_MATCH_START (short version)">$@-</template><template context="perl" description="Standard print command" enabled="true" name="print">print "${cursor}\n";</template><template context="perl" description="printf command" enabled="true" name="printf">printf ("${cursor}\n", ${Arguments});</template><template context="perl" description="Any alphanumeric, that is, an alpha or a digit." enabled="true" name="character class [:alnum:]">[:alnum:]</template><template context="perl" description="Any letter. (That's a lot more letters than you think, unless you're thinking Unicode, in which case it's still a lot.)" enabled="true" name="character class [:alpha:]">[:alpha:]</template><template context="perl" description="Any character with an ordinal value between 0 and 127." enabled="true" name="character class [:ascii:]">[:ascii:]</template><template context="perl" description="Any control character. " enabled="true" name="character class [:cntrl:]">[:cntrl:]</template><template context="perl" description="A character representing a decimal digit, such as 0 to 9. " enabled="true" name="character class [:digit:]">[:digit:]</template><template context="perl" description="Any alphanumeric or punctuation character.Any alphanumeric or punctuation character." enabled="true" name="character class [:graph:]">[:graph:]</template><template context="perl" description="A lowercase letter." enabled="true" name="character class [:lower:]">[:lower:]</template><template context="perl" description="Any alphanumeric or punctuation character or space." enabled="true" name="character class [:print:]">[:print:]</template><template context="perl" description="Any punctuation character." enabled="true" name="character class [:punct:]">[:punct:]</template><template context="perl" description="Any space character. Includes tab, newline, form feed, and carriage return.Any uppercase " enabled="true" name="character class [:space:]">[:space:]</template><template context="perl" description="Any uppercase letter" enabled="true" name="character class [:upper:]">[:upper:]</template><template context="perl" description="Any identifier character, either an alnum or underline." enabled="true" name="character class [:word:]">[:word:]</template><template context="perl" description="Any hexadecimal digit. Though this may seem silly ([0-9a-fA-F] works just fine)" enabled="true" name="character class [:xdigit:]">[:xdigit:]</template><template context="perl" description="Any alphanumeric, that is, an alpha or a digit." enabled="true" name="class [:alnum:]">[:alnum:]</template><template context="perl" description="Any letter. (That's a lot more letters than you think, unless you're thinking Unicode, in which case it's still a lot.)" enabled="true" name="class [:alpha:]">[:alpha:]</template><template context="perl" description="Any character with an ordinal value between 0 and 127." enabled="true" name="class [:ascii:]">[:ascii:]</template><template context="perl" description="Any control character. " enabled="true" name="class [:cntrl:]">[:cntrl:]</template><template context="perl" description="A character representing a decimal digit, such as 0 to 9. " enabled="true" name="class [:digit:]">[:digit:]</template><template context="perl" description="Any alphanumeric or punctuation character.Any alphanumeric or punctuation character." enabled="true" name="class [:graph:]">[:graph:]</template><template context="perl" description="A lowercase letter." enabled="true" name="class [:lower:]">[:lower:]</template><template context="perl" description="Any alphanumeric or punctuation character or space." enabled="true" name="class [:print:]">[:print:]</template><template context="perl" description="Any punctuation character." enabled="true" name="class [:punct:]">[:punct:]</template><template context="perl" description="Any space character. Includes tab, newline, form feed, and carriage return.Any uppercase " enabled="true" name="class [:space:]">[:space:]</template><template context="perl" description="Any uppercase letter" enabled="true" name="class [:upper:]">[:upper:]</template><template context="perl" description="Any identifier character, either an alnum or underline." enabled="true" name="class [:word:]">[:word:]</template><template context="perl" description="Any hexadecimal digit. Though this may seem silly ([0-9a-fA-F] works just fine)" enabled="true" name="class [:xdigit:]">[:xdigit:]</template><template context="perl" description="Test: file age since inode change" enabled="true" name="test: file age since inode change">-C</template><template context="perl" description="Test: file age since last access" enabled="true" name="test: file age since last access">-A</template><template context="perl" description="Test: file age since modification" enabled="true" name="test: file age since modification">-M</template><template context="perl" description="Test: file is binary file" enabled="true" name="test: file is binary file">-B</template><template context="perl" description="Test: file is block special file" enabled="true" name="test: file is block special file">-b</template><template context="perl" description="Test: file is character special file" enabled="true" name="test: file is character special file">-c</template><template context="perl" description="Test: file is directory" enabled="true" name="test: file is directory">-d</template><template context="perl" description="Test: file is plain file" enabled="true" name="test: file is plain file">-f</template><template context="perl" description="Test: file is named pipe" enabled="true" name="test: file is named pipe">-p</template><template context="perl" description="Test: file is text file" enabled="true" name="test: file is text file">-T</template><template context="perl" description="Test: file is socket" enabled="true" name="test: file is socket">-S</template><template context="perl" description="Test: file is symbolic link" enabled="true" name="test: file is symbolic link">-l</template><template context="perl" description="Test: file is readable by eff. UID/GID" enabled="true" name="test: file is readable by eff. UID/GID">-r</template><template context="perl" description="Test: file is readable by real UID/GID" enabled="true" name="test: file is readable by real UID/GID">-R</template><template context="perl" description="Test: file is writable by eff. UID/GID" enabled="true" name="test: file is writable by eff. UID/GID">-w</template><template context="perl" description="Test: file is writable by real UID/GID" enabled="true" name="test: file is writable by real UID/GID">-W</template><template context="perl" description="Test: file is executable by eff. UID/GID" enabled="true" name="test: file is executable by eff. UID/GID">-x</template><template context="perl" description="Test: file is executable by real UID/GID" enabled="true" name="test: file is executable by real UID/GID">-X</template><template context="perl" description="Test: file exists" enabled="true" name="test: file exists">-e</template><template context="perl" description="Test: file handle opened to a tty" enabled="true" name="test: file handle opened to a tty">-t</template><template context="perl" description="Test: file is owned by eff. UID" enabled="true" name="test: file is owned by eff. UID">-o</template><template context="perl" description="Test: file is owned by real UID" enabled="true" name="test: file is owned by real UID">-O</template><template context="perl" description="Test: file has setgid bit set" enabled="true" name="test: file has setgid bit set">-g</template><template context="perl" description="Test: file has setuid bit set" enabled="true" name="test: file has setuid bit set">-u</template><template context="perl" description="Test: file has sticky bit set" enabled="true" name="test: file has sticky bit set">-k</template><template context="perl" description="Test: file has nonzero size" enabled="true" name="test: file has nonzero size">-s</template><template context="perl" description="Test: file has zero size" enabled="true" name="test: file has zero size">-z</template><template context="perl" description="Quote the next metacharacter" enabled="true" name="regex \">\</template><template context="perl" description="Match the beginning of the line" enabled="true" name="regex ^">^</template><template context="perl" description="Match any character (except newline)" enabled="true" name="regex .">.</template><template context="perl" description="Match the end of the line (or before newline at the end)" enabled="true" name="regex $">$$</template><template context="perl" description="Alternation" enabled="true" name="regex |">|</template><template context="perl" description="Grouping" enabled="true" name="regex ()">()</template><template context="perl" description="Character class" enabled="true" name="regex []">[]</template><template context="perl" description="Match 0 or more times" enabled="true" name="regex *">*</template><template context="perl" description="Match 1 or more times" enabled="true" name="regex +">+</template><template context="perl" description="Match 1 or 0 times" enabled="true" name="regex ?">?</template><template context="perl" description="Match exactly n times" enabled="true" name="regex {n}">{n}</template><template context="perl" description="Match at least n times" enabled="true" name="regex {n,}">{n,}</template><template context="perl" description="Match at least n but not more than m times" enabled="true" name="regex {n,m}">{n,m}</template><template context="perl" description="Match 0 or more times" enabled="true" name="regex *?">*?</template><template context="perl" description="Match 1 or more times" enabled="true" name="regex +?">+?</template><template context="perl" description="Match 0 or 1 time" enabled="true" name="regex ??">??</template><template context="perl" description="Match exactly n times" enabled="true" name="regex {n}?">{n}?</template><template context="perl" description="Match at least n times" enabled="true" name="regex {n,}?">{n,}?</template><template context="perl" description="Match at least n but not more than m times" enabled="true" name="regex {n,m}?">{n,m}?</template><template context="perl" description="tab (HT, TAB)" enabled="true" name="regex \t">\t</template><template context="perl" description="newline (LF, NL)" enabled="true" name="regex \n">\n</template><template context="perl" description="return (CR)" enabled="true" name="regex \r">\r</template><template context="perl" description="form feed (FF)" enabled="true" name="regex \f">\f</template><template context="perl" description="alarm (bell) (BEL)" enabled="true" name="regex \a">\a</template><template context="perl" description="escape (think troff) (ESC)" enabled="true" name="regex \e">\e</template><template context="perl" description="octal char (think of a PDP-11)" enabled="true" name="regex \033">\033</template><template context="perl" description="hex char" enabled="true" name="regex \x1B">\x1B</template><template context="perl" description="wide hex char (Unicode SMILEY)" enabled="true" name="regex \x{263a}">\x{263a}</template><template context="perl" description="control char" enabled="true" name="regex \c[">\c[</template><template context="perl" description="named char" enabled="true" name="regex \N{name}">\N{${name}}</template><template context="perl" description="lowercase next char (think vi)" enabled="true" name="regex \l">\l</template><template context="perl" description="uppercase next char (think vi)" enabled="true" name="regex \u">\u</template><template context="perl" description="lowercase till E (think vi)" enabled="true" name="regex \L">\L</template><template context="perl" description="uppercase till E (think vi)" enabled="true" name="regex \U">\U</template><template context="perl" description="end case modification (think vi)" enabled="true" name="regex \E">\E</template><template context="perl" description="quote (disable) pattern metacharacters till E" enabled="true" name="regex \Q">\Q</template><template context="perl" description="Match a &quot;word&quot; character (alphanumeric plus &quot;_&quot;)" enabled="true" name="regex \w">\w</template><template context="perl" description="Match a non-word character" enabled="true" name="regex \W">\W</template><template context="perl" description="Match a whitespace character" enabled="true" name="regex \s">\s</template><template context="perl" description="Match a non-whitespace character" enabled="true" name="regex \S">\S</template><template context="perl" description="Match a digit character" enabled="true" name="regex \d">\d</template><template context="perl" description="Match a non-digit character" enabled="true" name="regex \D">D</template><template context="perl" description="Match P, named property.  Use p{Prop} for longer names." enabled="true" name="regex \pP">\pP</template><template context="perl" description="Match non-P" enabled="true" name="regex \PP">\PP</template><template context="perl" description="Match eXtended Unicode &quot;combining character sequence&quot;, equivalent to C&lt;(?:PMpM*)&gt;" enabled="true" name="regex \X">\X</template><template context="perl" description="Match a single C char (octet) even under utf8." enabled="true" name="regex \C">\C</template><template context="perl" description="Any alphanumeric, that is, an alpha or a digit." enabled="true" name="regex [:alnum:]">[:alnum:]</template><template context="perl" description="Any letter. (That's a lot more letters than you think, unless you're thinking Unicode, in which case it's still a lot.)" enabled="true" name="regex [:alpha:]">[:alpha:]</template><template context="perl" description="Any character with an ordinal value between 0 and 127." enabled="true" name="regex [:ascii:]">[:ascii:]</template><template context="perl" description="Any control character. " enabled="true" name="regex [:cntrl:]">[:cntrl:]</template><template context="perl" description="A character representing a decimal digit, such as 0 to 9. " enabled="true" name="regex [:digit:]">[:digit:]</template><template context="perl" description="Any alphanumeric or punctuation character.Any alphanumeric or punctuation character." enabled="true" name="regex [:graph:]">[:graph:]</template><template context="perl" description="A lowercase letter." enabled="true" name="regex [:lower:]">[:lower:]</template><template context="perl" description="Any alphanumeric or punctuation character or space." enabled="true" name="regex [:print:]">[:print:]</template><template context="perl" description="Any punctuation character." enabled="true" name="regex [:punct:]">[:punct:]</template><template context="perl" description="Any space character. Includes tab, newline, form feed, and carriage return.Any uppercase " enabled="true" name="regex [:space:]">[:space:]</template><template context="perl" description="Any uppercase letter" enabled="true" name="regex [:upper:]">[:upper:]</template><template context="perl" description="Any identifier character, either an alnum or underline." enabled="true" name="regex [:word:]">[:word:]</template><template context="perl" description="Any hexadecimal digit. Though this may seem silly ([0-9a-fA-F] works just fine)" enabled="true" name="regex [:xdigit:]">[:xdigit:]</template><template context="perl" description="Match a word boundary" enabled="true" name="regex \b">\b</template><template context="perl" description="Match a non-(word boundary)" enabled="true" name="regex \B">\B</template><template context="perl" description="Match only at beginning of string" enabled="true" name="regex \A">\A</template><template context="perl" description="Match only at end of string, or before newline at the end" enabled="true" name="regex \Z">\Z</template><template context="perl" description="Match only at end of string" enabled="true" name="regex \z">\z</template><template context="perl" description="Match only at pos() (e.g. at the end-of-match position of prior m//g)" enabled="true" name="regex \G">\G</template><template context="perl" description="Alteration; matches either pattern1 or pattern2" enabled="true" name="regex (pattern1|pattern2)">(${pattern1}|${pattern2})</template><template context="perl" description="This is for clustering, not capturing; it groups subexpressions like &quot;()&quot;, but doesn't make backreferences as &quot;()&quot; does." enabled="true" name="regex (?:pattern)">(?:${pattern})</template><template context="perl" description="This is for clustering, not capturing; it groups subexpressions like &quot;()&quot;, but doesn't make backreferences as &quot;()&quot; does." enabled="true" name="regex (?imsx-imsx:pattern)">(?${imsx}-${imsx}:${pattern})</template><template context="perl" description="A comment. The text is ignored." enabled="true" name="regex (?#text)">(?#${text})</template><template context="perl" description="This zero-width assertion evaluate any embedded Perl code." enabled="true" name="regex (?{code })">(?{${code}})</template><template context="perl" description="This is a &quot;postponed&quot; regular subexpression. The code is evaluated at run time, at the moment this subexpression may match." enabled="true" name="regex (??{code })">(??{${code}})</template><template context="perl" description="Zero-width negative look-ahead assertion." enabled="true" name="regex (?!pattern)">(?!${pattern})</template><template context="perl" description="Zero-width positive look-ahead assertion." enabled="true" name="regex (?=pattern)">(?=${pattern})</template><template context="perl" description="Zero-width positive look-behind assertion." enabled="true" name="regex (?&lt;=pattern)">(?&lt;=${pattern})</template><template context="perl" description="A zero-width negative look-behind assertion." enabled="true" name="regex (?&lt;!pattern)">(?&lt;!${cursor})</template><template context="perl" description="Conditional expression." enabled="true" name="regex (?(condition)yes-pattern|no-pattern)">(?(${condition})${yes-pattern}|${no-pattern}))</template><template context="perl" description="Conditional expression." enabled="true" name="regex (?(condition)yes-pattern)">(?(${condition}${yes-pattern}))</template><template context="perl" description="One or more embedded pattern-match modifiers." enabled="true" name="regex (?imsx-imsx)">(?${imsx}-${imsx})</template><template context="perl" description="Hash key containing environment variable" enabled="true" name="$ENV{$Key}">$$ENV{'${Key}'}</template><template context="perl" description="sprintf command" enabled="true" name="sprintf">my $$${Scalar} = sprintf ("${cursor}\n", ${Arguments});</template><template context="perl" description="add no critic comment" enabled="true" name="## no critic">## no critic (${CriticPolicy})</template><template context="perl" description="create a TriggerHook call" enabled="true" name="TriggerHook">TriggerHook('${HookName}', { ${HookParams} });</template><template context="html_all" description="Home-page &quot;Passport to Adventure&quot; Code" enabled="true" name="ep6_300_ w0osb">&lt;div&gt;&#13;
 &lt;img src="#StoreRoot/ShopExtraImages/Passport.gif"  	class="FloatRight BottomMargin" alt="{PassportHead}"/&gt;&#13;
  &lt;h1&gt;{PassportHead}&lt;/h1&gt;&#13;
#IF(#Session.User AND NOT #Session.User.IsAnonymous)&#13;
  {Welcome} #Session.User.BillingAddress.DisplayName &lt;br/&gt;&#13;
#ENDIF&#13;
{PassportText} &#13;
&lt;/div&gt;</template><template context="html_all" description="Polling MBO-Homepage Link Template" enabled="true" name="ep6_300_71gpn">&lt;a class="Action" href="?ViewAction=MBO-ViewPollingSettings&amp;amp;ObjectID=#Shop.ID"&gt;{PollingSettings}&lt;/a&gt;</template><template context="html_all" description="Optional: Extend Polling Cartridge: SF.PollingBox.html" enabled="true" name="ep6_300_9fjqe">#IF(#Session.User AND NOT #Session.User.IsAnonymous)&#13;
&#13;
  #IF(NOT #Session.User.Voted)&#13;
&#13;
    &lt;div class="ContextBox NavBarElement#NavElementNo"&gt;&#13;
      &lt;div class="ContextBoxHead"&gt;&lt;span&gt;{PleaseVote}&lt;/span&gt;&lt;/div&gt;&#13;
      &lt;div class="ContextBoxBody"&gt;&#13;
        &lt;form&#13;
          action="?ObjectPath=#Shop.Path[url]&amp;amp;ViewAction=ViewPollingResult"&#13;
          method="post"&gt;&lt;input type="hidden" name="ChangeAction"&#13;
          value="SavePolling" /&gt; {VoteA}: &lt;input type="radio" name="Result"&#13;
          value="A" /&gt; &lt;br /&gt;&#13;
        {VoteB}: &lt;input type="radio" name="Result" value="B" /&gt; &lt;br /&gt;&#13;
        {VoteC}: &lt;input type="radio" name="Result" value="C" /&gt; &lt;br /&gt;&#13;
        &lt;input type="submit" value="{VoteNow}" /&gt;&#13;
        &lt;/form&gt;&#13;
      &lt;/div&gt;&#13;
    &lt;/div&gt;&#13;
&#13;
  #ELSE&#13;
&#13;
    &lt;div class="ContextBox NavBarElement#NavElementNo"&gt;&#13;
      &lt;div class="ContextBoxHead"&gt;&lt;span&gt;{ThankYouForVoting}&lt;/span&gt;&lt;/div&gt;&#13;
      &lt;div class="ContextBoxBody"&gt;&lt;/div&gt;&#13;
    &lt;/div&gt;&#13;
&#13;
  #ENDIF&#13;
&#13;
#ELSE&#13;
&#13;
  &lt;div class="ContextBox NavBarElement#NavElementNo"&gt;&#13;
    &lt;div class="ContextBoxHead"&gt;&lt;span&gt;{PleaseLoginToVote}&lt;/span&gt;&lt;/div&gt;&#13;
    &lt;div class="ContextBoxBody"&gt;&lt;/div&gt;&#13;
  &lt;/div&gt;&#13;
&#13;
#ENDIF</template><template context="html_all" description="Home-page &quot;Product of the Month&quot; Code" enabled="true" name="ep6_300_9wmqt">#IF(#COUNT(#VisibleProducts))&#13;
  #INCLUDE("CategorySearchForm")&#13;
    &lt;h1&gt;{ProductOfMonthHead}&lt;/h1&gt;&#13;
    &lt;p&gt;{ProductOfMonthText}&lt;/p&gt;&#13;
  &lt;div class="HotDealList"&gt;&#13;
    &lt;!-- Edit loop to display only element 0 as start/end element. See diagnostics for LOOP TLE-Function docs --&gt;&#13;
    #LOOP(#VisibleProducts,0,0)</template><template context="html_all" description="Polling Tab-Page Template" enabled="true" name="ep6_300_c9qql">&lt;form action="?ViewAction=MBO-ViewPollingSettings&amp;amp;ObjectID=#Shop.ID" method="post"&gt;&#13;
  &lt;div class="Dialog"&gt;&#13;
  &#13;
#IF(#FormError)&#13;
  &lt;div class="DialogMessage MessageWarning"&gt;&#13;
    &lt;h3&gt;{InputError}&lt;/h3&gt;&#13;
  #LOOP(#FormErrors.Errors)&#13;
    #IF(#Reason EQ "TotalCountTooHigh")&#13;
      {TotalCountTooHigh}&#13;
    #ELSE&#13;
   &lt;br /&gt;Error: #Reason, #Value, #Name.&#13;
    #ENDIF&#13;
  #ENDLOOP&#13;
&#13;
    {PleaseCorrectErrors}&#13;
  &lt;/div&gt;&#13;
#ENDIF&#13;
&#13;
  &lt;input type="hidden" name="ChangeAction" value="MBO-SavePolling" /&gt;&#13;
&#13;
  #WITH(#Shop.Child.PollingResult)&#13;
  #WITH_ERROR(#FormError)&#13;
  &lt;br/&gt;&#13;
  &lt;table class="FormGrid"&gt;&#13;
    &lt;tr&gt;&#13;
      &lt;td class="InputLabellingWide"&gt;&lt;h4&gt;{SetPollingA}{MandatoryStar}&lt;/h4&gt;&lt;/td&gt;&#13;
      &lt;td class="InputBlock#IF(#FormError_PollingA OR #FormError_ALL) DialogError#ENDIF"&gt;&#13;
        &lt;input class="Unit" type="text" dojoType="epages.widget.FormElement" name="PollingA" value="#PollingA" /&gt;&#13;
      &lt;/td&gt;&#13;
    &lt;/tr&gt;&#13;
    &lt;tr&gt;&#13;
      &lt;td class="InputLabellingWide"&gt;&lt;h4&gt;{SetPollingB}{MandatoryStar}&lt;/h4&gt;&lt;/td&gt;&#13;
      &lt;td class="InputBlock#IF(#FormError_PollingB OR #FormError_ALL) DialogError#ENDIF"&gt;&#13;
        &lt;input class="Unit" type="text" dojoType="epages.widget.FormElement" name="PollingB" value="#PollingB" /&gt;&#13;
      &lt;/td&gt;&#13;
    &lt;/tr&gt;&#13;
    &lt;tr&gt;&#13;
      &lt;td class="InputLabellingWide"&gt;&lt;h4&gt;{SetPollingC}{MandatoryStar}&lt;/h4&gt;&lt;/td&gt;&#13;
      &lt;td class="InputBlock#IF(#FormError_PollingC OR #FormError_ALL) DialogError#ENDIF"&gt;&#13;
        &lt;input class="Unit" type="text" dojoType="epages.widget.FormElement" name="PollingC" value="#PollingC" /&gt;&#13;
      &lt;/td&gt;&#13;
    &lt;/tr&gt;&#13;
  &lt;/table&gt;&#13;
  &lt;br/&gt;&#13;
  #ENDWITH_ERROR&#13;
  #ENDWITH&#13;
  &lt;/div&gt;&#13;
  &lt;div class="DialogButtonbar"&gt;&#13;
    &lt;input class="Button SaveButton" type="submit" value="{Save}" /&gt;&#13;
  &lt;/div&gt;&#13;
{MandatoryFields}&#13;
&lt;/form&gt;</template><template context="html_all" description="Add Link Code to Override-Template: Exercise" enabled="true" name="ep6_300_d8cfj">&lt;br /&gt; &#13;
&lt;a href="?ObjectPath=#Shop.Path[url]&amp;amp;ViewAction=ViewPassport"&gt;{More}&lt;/a&gt;</template><template context="html_all" description="Create MBO Template Files: Exercise (1)" enabled="true" name="ep6_300_hxmdl">&lt;h1&gt;&#13;
  &lt;span class="BreadcrumbLastItem"&gt;{PollingSettings}&lt;/span&gt;&#13;
&lt;/h1&gt;&#13;
&lt;div class="TabPage"&gt;&#13;
#INCLUDE("Tabs")&#13;
#INCLUDE("TabPage")&#13;
&lt;/div&gt;</template><template context="html_all" description="Home-page &quot;Product of the Month&quot; Code (2)" enabled="true" name="ep6_300_iykg9">#IF(#Description)&#13;
            &lt;div class="InfoArea"&gt;&#13;
            #Description[slice:25]&lt;/div&gt;&#13;
          #ENDIF</template><template context="html_new" description="Create Passport Template: Exercise" enabled="true" name="ep6_300_jskfz">&lt;h2&gt;#Shop.NameOrAlias&lt;/h2&gt;&#13;
 &lt;h3&gt;#Shop.Slogan&lt;/h3&gt;&#13;
  &lt;h1&gt;{PassportDetailsHead}&lt;/h1&gt;&#13;
  &lt;img src="#StoreRoot/ShopExtraImages/PassportMain.jpg" alt="{PassportDetailsHead}"/&gt; &#13;
  &lt;br /&gt;&#13;
  {PassportDetailsText} &lt;br/&gt;&#13;
 #Shop.Signature[0]</template><template context="html_new" description="Polling Cartridge SF-PollingResult.Content.html" enabled="true" name="ep6_300_w6vc7">&lt;h1&gt;{Result}&lt;/h1&gt;&#13;
&#13;
  {VotedForA}: #PollingA &lt;br/&gt;&#13;
  {VotedForB}: #PollingB &lt;br/&gt;&#13;
  {VotedForC}: #PollingC &lt;br/&gt;&#13;
  &#13;
&#13;
&lt;!-- Alternative bar-graph design --&gt;&#13;
&lt;table style="border: #000000 1px solid;border-collapse:collapse"&#13;
height="2px" width="#CALCULATE(100 * (#Shop.PollingA /(#Shop.PollingA +&#13;
#Shop.PollingB + #Shop.PollingC)))%"&gt;&lt;tr&gt;&lt;td&#13;
style="background:#0000FF;height:2px;"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#13;
{VotedForA}: #Shop.PollingA &lt;br/&gt;&#13;
&lt;br/&gt;&#13;
&lt;table style="border: #000000 1px solid;border-collapse:collapse"&#13;
height="2px" width="#CALCULATE(100 * (#Shop.PollingB /(#Shop.PollingA +&#13;
#Shop.PollingB + #Shop.PollingC)))%"&gt;&lt;tr&gt;&lt;td&#13;
style="background:#0000FF;height:2px;"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#13;
{VotedForB}: #Shop.PollingB &lt;br/&gt;&#13;
&lt;br/&gt;&#13;
&lt;table style="border: #000000 1px solid;border-collapse:collapse" &#13;
height="2px" width="#CALCULATE(100 * (#Shop.PollingC /(#Shop.PollingA +&#13;
#Shop.PollingB + #Shop.PollingC)))%"&gt;&lt;tr&gt;&lt;td&#13;
style="background:#0000FF;height:2px;"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#13;
{VotedForC}: #Shop.PollingC &lt;br/&gt;</template><template context="html_all" description="Polling Tab-Page Template" enabled="true" name="ep6_300_wzkmt">&lt;form action="?ViewAction=MBO-ViewPollingSettings&amp;amp;ObjectID=#Shop.ID" method="post"&gt;&#13;
  &lt;div class="Dialog"&gt;&#13;
  &#13;
  &lt;input type="hidden" name="ChangeAction" value="MBO-SavePolling" /&gt;&#13;
&#13;
  #WITH(#Shop.Child.PollingResult)&#13;
  &lt;br/&gt;&#13;
  &lt;table class="FormGrid"&gt;&#13;
    &lt;tr&gt;&#13;
      &lt;td class="InputLabellingWide"&gt;&lt;h4&gt;{SetPollingA}{MandatoryStar}&lt;/h4&gt;&lt;/td&gt;&#13;
      &lt;td class="InputBlock"&gt;&#13;
        &lt;input class="Unit" type="text" dojoType="epages.widget.FormElement" name="PollingA" value="#PollingA" /&gt;&#13;
      &lt;/td&gt;&#13;
    &lt;/tr&gt;&#13;
    &lt;tr&gt;&#13;
      &lt;td class="InputLabellingWide"&gt;&lt;h4&gt;{SetPollingB}{MandatoryStar}&lt;/h4&gt;&lt;/td&gt;&#13;
      &lt;td class="InputBlock"&gt;&#13;
        &lt;input class="Unit" type="text" dojoType="epages.widget.FormElement" name="PollingB" value="#PollingB" /&gt;&#13;
      &lt;/td&gt;&#13;
    &lt;/tr&gt;&#13;
    &lt;tr&gt;&#13;
      &lt;td class="InputLabellingWide"&gt;&lt;h4&gt;{SetPollingC}{MandatoryStar}&lt;/h4&gt;&lt;/td&gt;&#13;
      &lt;td class="InputBlock"&gt;&#13;
        &lt;input class="Unit" type="text" dojoType="epages.widget.FormElement" name="PollingC" value="#PollingC" /&gt;&#13;
      &lt;/td&gt;&#13;
    &lt;/tr&gt;&#13;
  &lt;/table&gt;&#13;
  &lt;br/&gt;&#13;
  #ENDWITH&#13;
  &lt;/div&gt;&#13;
  &lt;div class="DialogButtonbar"&gt;&#13;
    &lt;input class="Button SaveButton" type="submit" value="{Save}" /&gt;&#13;
  &lt;/div&gt;&#13;
&lt;/form&gt;</template><template context="html_new" description="Polling Cartridge SF.PollingBox.html" enabled="true" name="ep6_300_zgw1q">&lt;div class="ContextBox NavBarElement#NavElementNo"&gt;&#13;
  &lt;div class="ContextBoxHead"&gt;&lt;span&gt;{PleaseVote}&lt;/span&gt;&lt;/div&gt;&#13;
  &lt;div class="ContextBoxBody"&gt;&#13;
    &lt;form&#13;
      action="?ObjectPath=#Shop.Path[url]&amp;amp;ViewAction=ViewPollingResult"&#13;
      method="post"&gt;&lt;input type="hidden" name="ChangeAction"&#13;
      value="SavePolling" /&gt; {VoteA}: &lt;input type="radio" name="Result"&#13;
      value="A" /&gt; &lt;br /&gt;&#13;
    {VoteB}: &lt;input type="radio" name="Result" value="B" /&gt; &lt;br /&gt;&#13;
    {VoteC}: &lt;input type="radio" name="Result" value="C" /&gt; &lt;br /&gt;&#13;
    &lt;input type="submit" value="{VoteNow}" /&gt;&#13;
    &lt;/form&gt;&#13;
  &lt;/div&gt;&#13;
&lt;/div&gt;</template><template context="perl" description="Optional: Extend Polling Cartridge: Extended SavePolling" enabled="true" name="ep6_300_0myvu">package Training::Polling::UI::Shop;&#13;
use base DE_EPAGES::Presentation::UI::Object;&#13;
&#13;
use strict;&#13;
&#13;
use DE_EPAGES::Object::API::Factory qw (Transaction);&#13;
&#13;
sub SavePolling {&#13;
    my $$self = shift;      #reference to self is 1st argument&#13;
    my ($$Servlet) = @_;    #Servlet is always second argument&#13;
&#13;
    # get the current user&#13;
    my $$User = $$Servlet-&gt;user;&#13;
    # return if not valid&#13;
    return if (!defined $$User || $$User-&gt;get('IsAnonymous'));&#13;
&#13;
    my $$Shop = $$Servlet-&gt;object;                #get object sent in URL&#13;
    my $$Result = $$Servlet-&gt;form-&gt;value('Result');        #get 'Result' value&#13;
    return unless $$Result =~ /^[ABC]$$/;         #validate 'Result'&#13;
&#13;
    my $$Attribute = 'Polling' . $$Result;        #concatenate&#13;
&#13;
    # create PollingResult object if missing&#13;
    $$Shop-&gt;insertChild('PollingResult',{'Alias' =&gt; 'PollingResult'})&#13;
        unless ($$Shop-&gt;existsChild('PollingResult'));&#13;
&#13;
    # get the PollingResult object&#13;
    my $$PollingResult = $$Shop-&gt;child('PollingResult');&#13;
&#13;
    my $$OldValue  = $$PollingResult-&gt;get($$Attribute);     #get existing value&#13;
&#13;
    # commit changes as one transaction.&#13;
    Transaction(sub {&#13;
        # update count&#13;
        $$PollingResult-&gt;set( { $$Attribute =&gt; $$OldValue + 1 } );&#13;
        # update voted flag&#13;
        $$User-&gt;set({'Voted' =&gt; 1 });&#13;
    });&#13;
&#13;
    return;&#13;
}&#13;
&#13;
1;</template><template context="perl" description="Add PollingResult Object Handler: Exercise" enabled="true" name="ep6_300_cgreb">#========================================================================================&#13;
# §package      Training::Polling::API::Object::PollingResult&#13;
# §base         DE_EPAGES::Object::API::Object::Object&#13;
# §state        public&#13;
# §description  Object interface for PollingResult&#13;
#========================================================================================&#13;
package Training::Polling::API::Object::PollingResult;&#13;
use base DE_EPAGES::Object::API::Object::Object;&#13;
&#13;
use strict;&#13;
&#13;
1;</template><template context="perl" description="Setting Defaults in Object::PollingResult" enabled="true" name="ep6_300_dt70j">sub default {&#13;
    my $$class = shift;&#13;
    my ($$Parent, $$hInfo) = @_;&#13;
    return {&#13;
        %{$$class-&gt;SUPER::default($$Parent, $$hInfo)},&#13;
        'PollingA'  =&gt; 1,&#13;
        'PollingB'  =&gt; 2,&#13;
        'PollingC'  =&gt; 3,&#13;
    };&#13;
}</template><template context="perl" description="Importing Standards During Cartridge Installation" enabled="true" name="ep6_300_gy6m4">use DE_EPAGES::Object::API::XML::ObjectImportHandler     qw (ImportObjects);&#13;
ImportObjects($$self-&gt;xmlDirectory . '/MyCurrencies.xml');</template><template context="perl" description="Polling Shop.pm UI Module: SavePolling" enabled="true" name="ep6_300_gyvun">package Training::Polling::UI::Shop;&#13;
use base DE_EPAGES::Presentation::UI::Object;&#13;
&#13;
use strict;&#13;
&#13;
use Training::Polling::API::PollingResult qw ( GetOrCreatePollingResult );&#13;
&#13;
sub SavePolling {&#13;
    my $$self = shift;      #reference to self is 1st argument&#13;
    my ($$Servlet) = @_;    #Servlet is always second argument&#13;
    my $$Shop = $$Servlet-&gt;object;                #get object sent in URL&#13;
    my $$Result = $$Servlet-&gt;form-&gt;value('Result');        #get 'Result' value&#13;
    return unless $$Result =~ /^[ABC]$$/;         #validate 'Result'&#13;
    my $$Attribute = 'Polling' . $$Result;        #concatenate&#13;
    # create PollingResult object if missing&#13;
    my $$PollingResult = GetOrCreatePollingResult($$Shop);&#13;
    my $$OldValue  = $$PollingResult-&gt;get($$Attribute);     #get existing value&#13;
    $$PollingResult-&gt;set( { $$Attribute =&gt; $$OldValue + 1 } );&#13;
    return;&#13;
}&#13;
&#13;
1;</template><template context="perl" description="Polling Shop.pm MBO Sub-Routine" enabled="true" name="ep6_300_k3em5">sub ManagePolling {&#13;
	my $$self = shift; # remove self from arguments&#13;
	my ($$Servlet) = @_; # get servlet object from args&#13;
	my $$Shop = $$Servlet-&gt;object; # get shop object &#13;
	my $$Form = $$Servlet-&gt;form; # get form object&#13;
 # read form values for polling attributes&#13;
	my $$PollingA = $$Form-&gt;value('PollingA');&#13;
	return unless $$PollingA =~ /^[0-9]+$$/;&#13;
 	my $$PollingB = $$Form-&gt;value('PollingB');&#13;
 	return unless $$PollingB =~ /^[0-9]+$$/;&#13;
	my $$PollingC = $$Form-&gt;value('PollingC');&#13;
	return unless $$PollingC =~ /^[0-9]+$$/;&#13;
&#13;
    # get polling object&#13;
    use Training::Polling::API::PollingResult qw( GetOrCreatePollingResult );&#13;
    my $$PollingResult = GetOrCreatePollingResult($$Shop);&#13;
&#13;
    # set polling attributes&#13;
    $$PollingResult-&gt;set({&#13;
        'PollingA'=&gt;$$PollingA,&#13;
        'PollingB'=&gt;$$PollingB,&#13;
        'PollingC'=&gt;$$PollingC,&#13;
    });&#13;
    return;&#13;
}</template><template context="perl" description="Test Logging Debug Structures: Exercise" enabled="true" name="ep6_300_kiz1u">use DE_EPAGES::Core::API::Log qw (GetLog LogDebug); &#13;
my $$hVars = $$Servlet-&gt;vars;&#13;
LogDebug('servlet vars', $$hVars);</template><template context="perl" description="Creating APIs with Exporter.pm" enabled="true" name="ep6_300_ky9ke">#========================================================================================&#13;
# §package      Training::Polling::API::PollingResult&#13;
# §base         Exporter&#13;
# §state        public&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  PollingResult API&#13;
#========================================================================================&#13;
package Training::Polling::API::PollingResult;&#13;
use base Exporter;&#13;
&#13;
use strict;&#13;
&#13;
use DE_EPAGES::Core::API::TestParameter qw ( TestObject );&#13;
&#13;
our @EXPORT_OK = qw ( GetOrCreatePollingResult );&#13;
&#13;
#========================================================================================&#13;
# §function     GetOrCreatePollingResult&#13;
# §state        public&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       GetOrCreatePollingResult( $$Shop );&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  Returns PollingResult, creates a new one if necessary&#13;
#----------------------------------------------------------------------------------------&#13;
# §input        $$Shop | Shop object | object&#13;
# §return       $$PollingResult | PollingResult object | object&#13;
#========================================================================================&#13;
sub GetOrCreatePollingResult {&#13;
    my ($$Shop) = @_;&#13;
    TestObject('Shop', $$Shop, 'DE_EPAGES::Shop::API::Object::Shop');&#13;
    return $$Shop-&gt;insertChild('PollingResult',{'Alias' =&gt; 'PollingResult'}) unless ($$Shop-&gt;existsChild('PollingResult'));&#13;
    return $$Shop-&gt;child('PollingResult');&#13;
}&#13;
&#13;
1;</template><template context="perl" description="Polling Shop.pm Code Change" enabled="true" name="ep6_300_m5r2s">$$Form-&gt;form($$Shop, 'SetPolling');&#13;
    # script stops if form validation fails, remove manual checking&#13;
    # example of creating form errors&#13;
    if ( ( $$PollingA + $$PollingB + $$PollingC ) &gt; 100 ) {&#13;
        $$Form-&gt;addFormError( {&#13;
                'Reason'   =&gt; 'TotalCountTooHigh',&#13;
                'Name'     =&gt; 'ALL',&#13;
                'MaxValue' =&gt; 100,&#13;
            }&#13;
        );&#13;
        $$Form-&gt;executeFormError;&#13;
    }</template><template context="perl" description="Polling Shop.pm UI Module: SavePolling" enabled="true" name="ep6_300_ub9au">package Training::Polling::UI::Shop;&#13;
use base DE_EPAGES::Presentation::UI::Object;&#13;
&#13;
use strict;&#13;
&#13;
sub SavePolling {&#13;
    my $$self = shift;      #reference to self is 1st argument&#13;
    my ($$Servlet) = @_;    #Servlet is always second argument&#13;
&#13;
    my $$Shop = $$Servlet-&gt;object;                #get object sent in URL&#13;
    my $$Result = $$Servlet-&gt;form-&gt;value('Result');        #get 'Result' value&#13;
    return unless $$Result =~ /^[ABC]$$/;         #validate 'Result'&#13;
&#13;
    my $$Attribute = 'Polling' . $$Result;        #concatenate&#13;
&#13;
    # create PollingResult object if missing&#13;
    $$Shop-&gt;insertChild('PollingResult',{'Alias' =&gt; 'PollingResult'})&#13;
        unless ($$Shop-&gt;existsChild('PollingResult'));&#13;
&#13;
    # get the PollingResult object&#13;
    my $$PollingResult = $$Shop-&gt;child('PollingResult');&#13;
&#13;
    my $$OldValue  = $$PollingResult-&gt;get($$Attribute);     #get existing value&#13;
    $$PollingResult-&gt;set( { $$Attribute =&gt; $$OldValue + 1 } );    #count up value&#13;
&#13;
    return;&#13;
}&#13;
&#13;
1;</template><template context="perl" description="Test Logging for Polling: Exercise" enabled="true" name="ep6_300_wg1qw">use DE_EPAGES::Core::API::Log qw ( GetLog );&#13;
GetLog()-&gt;info("Old value for $$Attribute is $$OldValue");</template><template context="perl" description="Implement VoteCount as Dynamic Attribute: Exercise" enabled="true" name="ep6_300_wj3uv">#========================================================================================&#13;
# §package      Training::Polling::API::Attributes::PollingResult&#13;
# §base         DE_EPAGES::Object::API::BaseAttribute&#13;
# §state        private&#13;
# §description  Attribute interface for PollingResult.&#13;
#========================================================================================&#13;
package Training::Polling::API::Attributes::PollingResult;&#13;
use base DE_EPAGES::Object::API::BaseAttribute;&#13;
&#13;
use strict;&#13;
&#13;
sub getAttributes {&#13;
    shift;&#13;
    my ($$Object, $$aNames) = @_;&#13;
    my $$hInfo = {};&#13;
    foreach my $$Name (@$$aNames) {&#13;
        if ($$Name eq 'TotalVotes') {&#13;
             $$hInfo-&gt;{$$Name} = $$Object-&gt;get('PollingA') + $$Object-&gt;get('PollingB') + $$Object-&gt;get('PollingC');&#13;
        }&#13;
    }&#13;
    return $$hInfo;&#13;
}&#13;
&#13;
1;</template><template context="perl" description="Implement Attributes Package: Exercise: Extend Cartridge.pm" enabled="true" name="ep6_300_z6xl2">use DE_EPAGES::Object::API::Factory qw(LoadObjectByPath);&#13;
my $$aShops = LoadObjectByPath('/Shops')-&gt;children;&#13;
foreach my $$Shop (@$$aShops) {&#13;
    $$Shop-&gt;insertChild('PollingResult', {&#13;
        Alias    =&gt; 'PollingResult',&#13;
        PollingA =&gt; 1,&#13;
        PollingB =&gt; 2,&#13;
        PollingC =&gt; 3,&#13;
    });&#13;
}</template><template context="xml_new" description="Code for Translation.NavElements.de.xml" enabled="true" name="ep6_300_ vubpr">&lt;?xml version="1.0" encoding="iso-8859-1" ?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="de"&gt;&#13;
    &lt;Object Path="/NavElements/PollingBox"&gt;&#13;
      &lt;Attribute Name="Name"&gt;Fragebogen&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling Cartridge ActionsShop.xml" enabled="true" name="ep6_300_0sahs">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Class reference="1" Path="/Classes/Shop"&gt;&#13;
    &lt;Object Alias="Actions"&gt;&#13;
      &lt;Action Alias="ViewPollingResult" Package="DE_EPAGES::Presentation::UI::Object" FunctionName="View" delete="1" /&gt;&#13;
      &lt;Action Alias="SavePolling" Package="Training::Polling::UI::Shop" FunctionName="SavePolling" delete="1" /&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Class&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Create Products English Language File: Exercise" enabled="true" name="ep6_300_25yb5">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="en"&gt;&#13;
    &lt;Translation Keyword="ProductOfMonthHead"&gt;Product of the month&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="ProductOfMonthText"&gt;Every month a great new value!&lt;/Translation&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="ReadOnly Attributes: Define TotalVotes in Attributes.xml" enabled="true" name="ep6_300_2sw9p">&lt;Attribute Alias="TotalVotes" Type="Integer" IsReadOnly="1" IsExportable="0" IsCacheable="0" Package="Training::Polling::API::Attributes::PollingResult" delete="1" /&gt;</template><template context="xml_new" description="Language Tags for Passport Page: English" enabled="true" name="ep6_300_5rz54">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;  &#13;
   &lt;Language Language="en"&gt; &#13;
      &lt;Translation Keyword="PassportDetailsHead"&gt;Take a Family Hike with Milestones' Passport to Adventure!&lt;/Translation&gt;   &#13;
      &lt;Translation Keyword="PassportDetailsText"&gt;Get your kids out on an outdoor adventure! Sign up for Milestones' Passport to Adventure and start hiking your way through summer. It's easy! Go to your Milestones store ..."&lt;/Translation&gt; &#13;
   &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling Cartridge AttributesPollingResult.xml" enabled="true" name="ep6_300_62718">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Object Path="/Classes" reference="1"&gt;&#13;
    &lt;Class Alias="PollingResult" Base="Object" Package="Training::Polling::API::Object::PollingResult" delete="1" &gt;&#13;
      &lt;Object Alias="Attributes"&gt;&#13;
        &lt;Attribute Alias="PollingA"    Type="Integer" IsCacheable="1" IsObject="0" Package="DE_EPAGES::Object::API::Attributes::DefaultAttribute" /&gt;&#13;
        &lt;Attribute Alias="PollingB"    Type="Integer" IsCacheable="1" IsObject="0" Package="DE_EPAGES::Object::API::Attributes::DefaultAttribute" /&gt;&#13;
        &lt;Attribute Alias="PollingC"    Type="Integer" IsCacheable="1" IsObject="0" Package="DE_EPAGES::Object::API::Attributes::DefaultAttribute" /&gt;&#13;
      &lt;/Object&gt;&#13;
    &lt;/Class&gt;&#13;
  &lt;/Object&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Create Permissions Descriptor: Exercise" enabled="true" name="ep6_300_73ktc">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Role reference="1" Path="/Classes/Shop/Roles/Customer"&gt;&#13;
    &lt;RoleAction Class="Object" Action="ViewPassport" delete="1" /&gt;&#13;
  &lt;/Role&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling Cartridge NavElements.xml" enabled="true" name="ep6_300_9c6zs">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;NavElements reference="1" Class="Object" Alias="NavElements"&gt;&#13;
    &lt;NavElement Alias="PollingBox" Template="PollingBox" NavElementGroup="/NavElementGroups/Default" delete="1" /&gt;&#13;
  &lt;/NavElements&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Helptopics Translation XML File: 1 per Language" enabled="true" name="ep6_300_bskag">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;!-- tranlation of all help topics for the cartridge --&gt;&#13;
  &lt;Language Language="en"&gt;&#13;
    &lt;Object Path="/HelpTopics/Polling_Help-1"&gt;&#13;
      &lt;Attribute Name="HeadLine"&gt; Setting Polling values &lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
    &lt;Object Path="/HelpTopics/Polling_Help-2"&gt;&#13;
      &lt;Attribute Name="HeadLine"&gt;Polling settings detailed information&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Create Products German Language File: Exercise" enabled="true" name="ep6_300_c91vr">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;  &#13;
  &lt;Language Language="de"&gt; &#13;
    &lt;Translation Keyword="ProductOfMonthHead"&gt;Produkt des Monats&lt;/Translation&gt;  &#13;
    &lt;Translation Keyword="ProductOfMonthText"&gt;Jeden Monat ein neues Superangebot!&lt;/Translation&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="Polling MBO ActionsShop.xml" enabled="true" name="ep6_300_cghcl">&lt;Action Alias="MBO-ViewPollingSettings" Package="Training::Polling::UI::Shop" FunctionName="View" delete="1" /&gt;&#13;
      &lt;Action Alias="MBO-SavePolling" Package="Training::Polling::UI::Shop" FunctionName="ManagePolling" delete="1" /&gt;</template><template context="xml_new" description="MyNewDesign: New PageTypesSF.xml File" enabled="true" name="ep6_300_dofwl">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
&lt;Cartridge reference="1" Package="Training::MyNewDesign"&gt;&#13;
  &lt;Class reference="1" Path="/Classes/Object"&gt;&#13;
      &lt;PageType Alias="SF-Passport"   Base="SF" delete="1"&gt;&#13;
        &lt;Template Name="Content"     FileName="SF/SF-Passport.Content.html" /&gt;&#13;
        &lt;ViewAction URLAction="ViewPassport" /&gt;&#13;
      &lt;/PageType&gt;&#13;
  &lt;/Class&gt;&#13;
&lt;/Cartridge&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling PageTypesMBO.xml" enabled="true" name="ep6_300_equkh">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;!-- page types and templates --&gt;&#13;
  &lt;Cartridge reference="1" Package="Training::Polling"&gt;&#13;
    &lt;Class reference="1" Path="/Classes/Object"&gt;&#13;
      &lt;PageType reference="1" Alias="MBO"&gt;&#13;
        &lt;Menu Name="Menu-Settings" reference="1"&gt;&#13;
          &lt;Menu Template="INC-MenuItem" Name="MenuItem-PollingSettings" Class="Shop" URLAction="MBO-ViewPollingSettings" Position="110"&#13;
            delete="1" /&gt;&#13;
        &lt;/Menu&gt;&#13;
      &lt;/PageType&gt;&#13;
    &lt;/Class&gt;&#13;
&#13;
    &lt;Class reference="1" Path="/Classes/Shop"&gt;&#13;
      &lt;PageType Alias="MBO-Polling" Base="MBO" delete="1"&gt;&#13;
        &lt;Menu Template="Tabs" Position="0"&gt;&#13;
          &lt;Menu Template="Tab-General" URLAction="MBO-ViewPollingSettings" Position="10" /&gt;&#13;
        &lt;/Menu&gt;&#13;
        &lt;Template Name="Content" FileName="MBO/MBO-Polling.Content.html" /&gt;&#13;
        &lt;Template Name="TabPage" FileName="MBO/MBO-Polling.TabPage.html" /&gt;&#13;
        &lt;ViewAction URLAction="MBO-ViewPollingSettings" /&gt;&#13;
      &lt;/PageType&gt;&#13;
      &lt;PageType reference="1" Alias="MBO-Shop"&gt;&#13;
        &lt;Menu reference="1" Template="StartPage-Settings"&gt;&#13;
          &lt;Menu Template="StartPage-SettingsPolling" Position="60" delete="1" /&gt;&#13;
        &lt;/Menu&gt;&#13;
        &lt;Template Name="StartPage-SettingsPolling" FileName="MBO/MBO-Shop.StartPage-SettingsPolling.html" delete="1" /&gt;&#13;
      &lt;/PageType&gt;&#13;
    &lt;/Class&gt;&#13;
&#13;
  &lt;/Cartridge&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Translation Files for MBO NavElement Texts" enabled="true" name="ep6_300_fgi41">&lt;?xml version="1.0" encoding="iso-8859-1" ?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="en"&gt;&#13;
    &lt;Object Path="/NavElements/PollingBox"&gt;&#13;
      &lt;Attribute Name="Name"&gt;Polling Box&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Importing Standards During Cartridge Installation" enabled="true" name="ep6_300_fzmt9">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt; &#13;
&lt;epages&gt;&#13;
	&lt;Currency CurrencyID="HKD" reference="1" IsUsed="1" /&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling Cartridge PageTypesSF.xml" enabled="true" name="ep6_300_hv2pg">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Cartridge reference="1" Package="Training::Polling"&gt;&#13;
&#13;
    &lt;Class reference="1" Path="/Classes/Shop"&gt;&#13;
      &lt;PageType Alias="SF-PollingResult" Base="SF" delete="1"&gt;&#13;
        &lt;Template Name="Content" FileName="SF/SF-PollingResult.Content.html" /&gt;&#13;
        &lt;ViewAction URLAction="ViewPollingResult" /&gt;&#13;
      &lt;/PageType&gt;&#13;
    &lt;/Class&gt;&#13;
&#13;
    &lt;Class reference="1" Path="/Classes/Object"&gt;&#13;
      &lt;PageType reference="1" Alias="SF"&gt;&#13;
        &lt;Template Name="PollingBox" FileName="SF/NavElements/SF.PollingBox.html" delete="1" /&gt;&#13;
      &lt;/PageType&gt;&#13;
    &lt;/Class&gt;&#13;
&#13;
  &lt;/Cartridge&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Create Main German Language File: Exercise" enabled="true" name="ep6_300_ip4uz">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;  &#13;
  &lt;Language Language="de"&gt; &#13;
    &lt;Translation Keyword="PassportHead"&gt;Passport zum Abenteuer&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="Welcome"&gt;Willkommen &lt;/Translation&gt;&#13;
    &lt;Translation Keyword="PassportText"&gt;Milestones' macht das Wandern noch lohnender für die ganze Familie.&lt;/Translation&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling Cartridge Dictionary.de.xml" enabled="true" name="ep6_300_j8z4y">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="de"&gt;&#13;
    &lt;!-- PollingBox keywords --&gt;&#13;
    &lt;Translation Keyword="PleaseVote"&gt;Bitte wählen!&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteA"&gt;Wählen Sie A&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteB"&gt;Wählen Sie B&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteC"&gt;Wählen Sie C&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteNow"&gt;Jetzt wählen!&lt;/Translation&gt;&#13;
    &lt;!-- PollingResults keywords --&gt;&#13;
    &lt;Translation Keyword="Result"&gt;Wahlergebnisse&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VotedForA"&gt;Für A wählten&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VotedForB"&gt;Für B wählten&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VotedForC"&gt;Für C wählten&lt;/Translation&gt;&#13;
    &lt;!-- MBO keywords --&gt;&#13;
    &lt;Translation Keyword="SetPollingA"&gt;Neuen Wert für A eingeben&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingB"&gt;Neuen Wert für B eingeben&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingC"&gt;Neuen Wert für C eingeben&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="PollingSettings"&gt;Polling-Einstellungen&lt;/Translation&gt;&#13;
    &#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling MBO German Name/MenuName Texts" enabled="true" name="ep6_300_ko05w">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="de"&gt;&#13;
    &lt;Object Path="/Classes/Shop/Actions/MBO-ViewPollingSettings"&gt;&#13;
      &lt;Attribute Name="Name"&gt;Polling - Allgemein&lt;/Attribute&gt;&#13;
      &lt;Attribute Name="MenuName"&gt;Pollingeinstellungen&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Helptopics Translation XML File: 1 per Language" enabled="true" name="ep6_300_ks9c2">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;!-- tranlation of all help topics for the cartridge --&gt;&#13;
  &lt;Language Language="de"&gt;&#13;
    &lt;Object Path="/HelpTopics/Polling_Help-1"&gt;&#13;
      &lt;Attribute Name="HeadLine"&gt;Abstimmungen verwalten&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
    &lt;Object Path="/HelpTopics/Polling_Help-2"&gt;&#13;
      &lt;Attribute Name="HeadLine"&gt;Details zu Polling&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Helptopics XML File Snippet" enabled="true" name="ep6_300_ljkaw">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Object Alias="HelpTopics"&gt;&#13;
    &lt;HelpTopic Alias="Polling_Help-1" URL="/MBO/Polling_Help-1.html?single=true&amp;amp;context= MBO_Help&amp;amp;topic=Polling_Help-1"&#13;
      delete="1" /&gt;&#13;
    &lt;HelpTopic Alias="Polling_Help-2" URL="/MBO/Polling_Help-2.html?single=true&amp;amp;context= MBO_Help&amp;amp;topic=Polling_Help-2"&#13;
      delete="1" /&gt;&#13;
  &lt;/Object&gt;&#13;
  &lt;Class reference="1" Path="/Classes/HelpTopic" /&gt;&#13;
  &lt;PageType reference="1" Alias="MBO-Polling"&gt;&#13;
    &lt;PageTypeHelpTopic HelpTopic="Polling_Help-1" Position="10" /&gt;&#13;
    &lt;PageTypeHelpTopicExt HelpTopic="Polling_Help-2" Position="10" /&gt;&#13;
  &lt;/PageType&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="Modify Dependencies File: Exercise" enabled="true" name="ep6_300_m6tjp">&lt;Dependency Package="DE_EPAGES::Shop" Comment="" /&gt;</template><template context="xml_new" description="MyNewDesign: ActionsObject.xml Code" enabled="true" name="ep6_300_o9hvd">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Class reference="1" Path="/Classes/Object"&gt;&#13;
    &lt;Object Alias="Actions"&gt;&#13;
      &lt;Action Alias="ViewPassport" Package="DE_EPAGES::Presentation::UI::Object" FunctionName="View" delete="1" /&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Class&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Polling Cartridge Dictionary.en.xml" enabled="true" name="ep6_300_pk494">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="en"&gt;&#13;
    &lt;!-- PollingBox keywords --&gt;&#13;
    &lt;Translation Keyword="PleaseVote"&gt;Please Vote!&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteA"&gt;Vote for A&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteB"&gt;Vote for B&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteC"&gt;Vote for C&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VoteNow"&gt;Vote Now!&lt;/Translation&gt;&#13;
    &lt;!-- PollingResults keywords --&gt;&#13;
    &lt;Translation Keyword="Result"&gt;Polling Results&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VotedForA"&gt;Voted for A&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VotedForB"&gt;Voted for B&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="VotedForC"&gt;Voted for C&lt;/Translation&gt;&#13;
    &lt;!-- MBO keywords --&gt;&#13;
    &lt;Translation Keyword="SetPollingA"&gt;Set a value for A&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingB"&gt;Set a value for B&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingC"&gt;Set a value for C&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="PollingSettings"&gt;Polling Settings&lt;/Translation&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="Polling MBO English Name/MenuName Texts" enabled="true" name="ep6_300_pnpyz">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="en"&gt;&#13;
    &lt;Object Path="/Classes/Shop/Actions/MBO-ViewPollingSettings"&gt;&#13;
      &lt;Attribute Name="Name"&gt;Polling - General&lt;/Attribute&gt;&#13;
      &lt;Attribute Name="MenuName"&gt;Polling Settings&lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="Polling FormsShop.xml Code" enabled="true" name="ep6_300_pt5rb">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Class reference="1" Path="/Classes/Shop"&gt;&#13;
    &lt;Form Name="SetPolling" delete="1"&gt;&#13;
      &lt;FormField Name="PollingA" Type="integer" Mandatory="1" MinValue="0" /&gt;&#13;
      &lt;FormField Name="PollingB" Type="integer" Mandatory="1" MinValue="0" /&gt;&#13;
      &lt;FormField Name="PollingC" Type="integer" Mandatory="1" MinValue="0" /&gt;&#13;
    &lt;/Form&gt;&#13;
  &lt;/Class&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="Polling Dictionary.en.xml Keywords" enabled="true" name="ep6_300_rmjmu">&lt;Translation Keyword="SetPollingA"&gt;Set a value for A&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingB"&gt;Set a value for B&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingC"&gt;Set a value for C&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="PollingSettings"&gt;Polling Settings&lt;/Translation&gt;</template><template context="xml_all" description="Polling Dictionary.de.xml Keywords" enabled="true" name="ep6_300_se7qk">&lt;Translation Keyword="SetPollingA"&gt;Neuen Wert für A eingeben&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingB"&gt;Neuen Wert für B eingeben&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="SetPollingC"&gt;Neuen Wert für C eingeben&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="PollingSettings"&gt;Polling-Einstellungen&lt;/Translation&gt;</template><template context="xml_all" description="Polling MBO Permissions.xml" enabled="true" name="ep6_300_tz50j">&lt;Role reference="1" Path="/Classes/Shop/Roles/Merchant"&gt;&#13;
    &lt;RoleAction Class="Shop" Action="MBO-ViewPollingSettings" delete="1" /&gt;&#13;
    &lt;RoleAction Class="Shop" Action="MBO-SavePolling" delete="1" /&gt;&#13;
  &lt;/Role&gt;</template><template context="xml_new" description="Polling Cartridge Permissions.xml" enabled="true" name="ep6_300_u4xsv">&lt;?xml version="1.0" encoding="UTF-8"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Role reference="1" Path="/Classes/Shop/Roles/Customer"&gt;&#13;
    &lt;RoleAction Class="Shop" Action="ViewPollingResult" delete="1" /&gt;&#13;
    &lt;RoleAction Class="Shop" Action="SavePolling" delete="1" /&gt;&#13;
  &lt;/Role&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Create Main English Language File: Exercise" enabled="true" name="ep6_300_ugo2v">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Language Language="en"&gt;&#13;
    &lt;Translation Keyword="PassportHead"&gt;Passport to Adventure&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="Welcome"&gt;Welcome&lt;/Translation&gt;&#13;
    &lt;Translation Keyword="PassportText"&gt;Milestones' is making family hiking even more rewarding.&lt;/Translation&gt;&#13;
  &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_new" description="Language Tags for Passport Page: German" enabled="true" name="ep6_300_uhcmj">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;  &#13;
   &lt;Language Language="de"&gt; &#13;
      &lt;Translation Keyword="PassportDetailsHead"&gt;Unternehmen Sie eine Familienwanderung mit dem Milestones Passport to Adventure!&lt;/Translation&gt;   &#13;
      &lt;Translation Keyword="PassportDetailsText"&gt; Verzaubern Sie Ihre Kinder mit einem Naturabenteuer. Melden Sie sich bei Milestones Passport to Adventure an, und wandern Sie Ihren Weg durch den Sommer. Es ist kinderleicht! Besuchen Sie Ihren Milestones Laden und holen Sie Ihren Passport und einen lokalen, familienfreundlichen Wanderführer ab...."&lt;/Translation&gt;&#13;
   &lt;/Language&gt;&#13;
&lt;/epages&gt;</template><template context="xml_all" description="Optional: Extend Polling Cartridge: AttributesUser.xml" enabled="true" name="ep6_300_xvwdi">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt;&#13;
&lt;epages&gt;&#13;
  &lt;Class reference="1" Path="/Classes/User"&gt;&#13;
    &lt;Object Alias="Attributes"&gt;&#13;
      &lt;Attribute Alias="Voted" Type="Boolean" IsCacheable="1" IsObject="0" Package="DE_EPAGES::Object::API::Attributes::DefaultAttribute" delete="1"&gt;&#13;
        &lt;AttributeValue Name="Description" Language="en" Value="True if user has voted" /&gt;&#13;
      &lt;/Attribute&gt;&#13;
    &lt;/Object&gt;&#13;
  &lt;/Class&gt;&#13;
&lt;/epages&gt;</template><template context="perl" description="getter/setter method" enabled="true" name="subGetterSetter">#========================================================================================&#13;
# §function     ${var}&#13;
# §state        ${public}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       my $$${var} = $$Object-&gt;${var};&#13;
# §syntax       $$Object-&gt;${var}('value');&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  getter/setter for '${var}'&#13;
#----------------------------------------------------------------------------------------&#13;
# §input        $$${var} | value of ${var} | any&#13;
# §return       $$${var} | value of ${var} | any&#13;
#========================================================================================&#13;
sub ${var} {&#13;
    my $$self = shift;&#13;
    my ($$${var}) = @_;&#13;
    return $$self-&gt;{'${var}'} unless (defined($$${var}));&#13;
    $$self-&gt;{'${var}'} = $$${var};&#13;
}</template><template context="perl" description="eDoc of an epages function" enabled="true" name="# eDocFunction">#========================================================================================&#13;
# §function     ${Function}&#13;
# §state        ${public_private}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       ${Function}( $$${Input1} );&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  ${Description}&#13;
#----------------------------------------------------------------------------------------&#13;
# §return       $$${ReturnVariable} | ${ReturnDescription} | ${ReturnType_boolean_integer_String_object_refhash_refarray}&#13;
#========================================================================================</template><template context="perl" description="perl constructor" enabled="true" name="subNew">sub new {&#13;
    my $$class = shift;&#13;
    my %args  = @_;&#13;
    my $$self  = bless \%args, $$class;&#13;
    return $$self;&#13;
}</template><template context="perl" description="BlockWarnings" enabled="true" name="BlockWarnings">my $$aWarnings = BlockWarnings( sub {&#13;
    eval {&#13;
        ${cursor}&#13;
    };&#13;
&#13;
    Warning(GetError()) if (ExistsError());&#13;
});</template><template context="perl" description="DAL Method" enabled="true" name="LoadClassAndObjects">my $$Class    = LoadClassByAlias('${Classname}');&#13;
my $$a${List}  = $$Class-&gt;getObjects('By${Index}',[$$${Variable}]);</template><template context="perl" description="perl skeleton for epages packages" enabled="true" name="epagesPackageSkeleton">#========================================================================================&#13;
# §package      DE_EPAGES::${Package}&#13;
# §base         ${Base}&#13;
# §state        public&#13;
# §description  ${Description}&#13;
#========================================================================================&#13;
package DE_EPAGES::${Package};&#13;
use base ${Base};&#13;
&#13;
use strict;&#13;
&#13;
sub ${MySub} {&#13;
    ${cursor}&#13;
}&#13;
&#13;
1;</template><template context="perl" description="epages api doc §input" enabled="true" name="# §input"># §input        $$${Input1} | ${Input1Description} | ${Input1Type_boolean_integer_float_String_object_ref_hash_refarray}</template><template context="perl" description="epages api doc §return" enabled="true" name="# §return"># §return       $$${ReturnVariable} | ${ReturnDescription} | ${ReturnType_boolean_integer_float_String_object_refhash_refarray}</template><template context="perl" description="stack handling method" enabled="true" name="subStack">#========================================================================================&#13;
# §function     push${var}&#13;
# §state        ${public}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       $$Object-&gt;push${var}($$Element);&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  pushes '${var}' on stack&#13;
#----------------------------------------------------------------------------------------&#13;
# §input        $$${var} | value of ${var} | any&#13;
#========================================================================================&#13;
sub push${var} {&#13;
    my $$self = shift;&#13;
    my ($$${var}) = @_;&#13;
    push @{$$self-&gt;{'${var}List'}}, $$${var};&#13;
}&#13;
&#13;
#========================================================================================&#13;
# §function     pop${var}&#13;
# §state        ${public}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       $$Object-&gt;pop${var}();&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  pops '${var}' from stack&#13;
#----------------------------------------------------------------------------------------&#13;
# §return       $$${var} | last element of ${var} | any&#13;
#========================================================================================&#13;
sub pop${var} {&#13;
    my $$self = shift;&#13;
    return pop @{$$self-&gt;{'${var}List'}};&#13;
}&#13;
&#13;
&#13;
#========================================================================================&#13;
# §function     ${var}List&#13;
# §state        ${public}&#13;
#----------------------------------------------------------------------------------------&#13;
# §syntax       $$Object-&gt;${var}List();&#13;
#----------------------------------------------------------------------------------------&#13;
# §description  returns list of '${var}' elements&#13;
#----------------------------------------------------------------------------------------&#13;
# §return       $$${var}List | element list of ${var} | any.array.ref&#13;
#========================================================================================&#13;
sub ${var}List {&#13;
    my $$self = shift;&#13;
    return $$self-&gt;{'${var}List'}//[];&#13;
}</template><template context="perl" description="XML::SAX::Handler for complex elements" enabled="true" name="subSAX_complex"># xml tag &lt;${Element}&gt;&#13;
sub start_${Element} {&#13;
    my $$self = shift;&#13;
    my ($$Element) = @_;&#13;
    $$self-&gt;pushID('${Parent}',DE_EPAGES::MeinPaket::API::DTO::${ElementClass}-&gt;new);&#13;
}&#13;
&#13;
#xml tag &lt;/${Element}&gt;&#13;
sub end_${Element} {&#13;
    my $$self = shift;&#13;
    my $$${ElementClass} = $$self-&gt;popID('${Parent}');&#13;
    my $$Obj = $$self-&gt;topID('${Parent}');&#13;
    $$Obj-&gt;${Setter}($$${ElementClass});&#13;
}</template><template context="perl" description="Subroutine" enabled="true" name="sub">sub ${name} {
    my $$self = shift;
    my ($$${Arguments}) = @_;
    ${cursor}
}</template><template context="perl" description="Assign a here document to a variable" enabled="true" name="heredoc">&lt;&lt;${HEREMARK}
${cursor}
${HEREMARK}</template><template context="perl" description="calls $Form-&gt;executeFormError()" enabled="true" name="$Form-&gt;executeFormError">$$Form-&gt;executeFormError({&#13;
    'Reason' =&gt; '${Reason}',&#13;
    'Name'   =&gt; '${FormField}',&#13;
});</template><template context="perl" description="calls $Form-&gt;addFormError()" enabled="true" name="$Form-&gt;addFormError">$$Form-&gt;addFormError({&#13;
    'Reason' =&gt; '${Reason}',&#13;
    'Name'   =&gt; '${FormField}',&#13;
});</template><template context="perl" description="gets Servlet form with form validation" enabled="true" name="my $Form = $Servlet-&gt;form">my $$Form = $$Servlet-&gt;form;&#13;
$$Form-&gt;form(${Object},'${FormName}');</template><template context="perl" description="calls $Servlet-&gt;vars()" enabled="true" name="$Servlet-&gt;vars">$$Servlet-&gt;vars('${Name}',${Content});</template><template context="perl" description="epages api doc §output" enabled="true" name="# §output"># §output        $$${Output} | ${OutputDescription} | ${InputTypex_object_refhash_refarray}</template><template context="perl" description="Skeleton of a .t-file running on RunScript" enabled="true" name="Test file skeleton">use strict;&#13;
&#13;
use DE_EPAGES::Core::API::Script qw ( RunScript );&#13;
use Test::More;&#13;
&#13;
sub Main {&#13;
    test${Something}();&#13;
    done_testing();&#13;
}&#13;
&#13;
sub test${Something} {&#13;
    ${cursor}&#13;
}&#13;
&#13;
RunScript( Sub =&gt; \&amp;Main );</template><template context="perl" description="Skeleton of a .t-file running on RunOnStore including xml-file import" enabled="true" name="Test file skeleton (with import.xml)">use strict;&#13;
use DE_EPAGES::Core::API::Error qw ( ExistsError GetError );&#13;
use DE_EPAGES::Core::API::Script qw ( RunScript );&#13;
use DE_EPAGES::Database::API::Connection qw ( GetTestSite RunOnStore );&#13;
use DE_EPAGES::Object::API::Factory qw (&#13;
  ExistsObjectByPath&#13;
  LoadObjectByPath&#13;
  LoadRootObject&#13;
);&#13;
use DE_EPAGES::Object::API::XML::ObjectImportHandler qw ( ImportObjects );&#13;
use Readonly;&#13;
use Test::More;&#13;
&#13;
Readonly my $$ROOTPATH =&gt; '/Test';&#13;
&#13;
sub Main {&#13;
    RunOnStore(&#13;
        'Store' =&gt; GetTestSite(),&#13;
        'Sub'   =&gt; sub {&#13;
&#13;
            # startUp&#13;
            ok( Init(), 'initialization' );&#13;
&#13;
            # tests&#13;
            eval { ${cursor} };&#13;
&#13;
            if ( ExistsError() ) {&#13;
                my $$Error = GetError();&#13;
                fail( 'Error: ' . $$Error-&gt;longMessage );&#13;
            }&#13;
&#13;
            # shutDown&#13;
            ok( Cleanup(), 'cleanup' );&#13;
            done_testing();&#13;
        }&#13;
    );&#13;
}&#13;
&#13;
sub Cleanup {&#13;
    return 1 if $$ENV{'SKIP_CLEANUP'};&#13;
    LoadObjectByPath($$ROOTPATH)-&gt;delete if ExistsObjectByPath($$ROOTPATH);&#13;
    return 1;&#13;
}&#13;
&#13;
sub Init {&#13;
    return 1 if ExistsObjectByPath($$ROOTPATH) &amp;&amp; $$ENV{'SKIP_CLEANUP'};&#13;
    Cleanup();&#13;
    LoadRootObject()-&gt;insertChild( 'Object', { Alias =&gt; 'Test' } );&#13;
    ImportObjects( 'import.xml', $$ROOTPATH );&#13;
    return 1;&#13;
}&#13;
&#13;
RunScript( Sub =&gt; \&amp;Main );&#13;
&#13;
1;</template><template context="perl" description="Skeleton of a .t-file running on TestSite" enabled="true" name="Test file skeleton (RunOnStore)">use strict;&#13;
use DE_EPAGES::Core::API::Script qw ( RunScript );&#13;
use DE_EPAGES::Database::API::Connection qw ( GetTestSite RunOnStore );&#13;
use Test::More;&#13;
&#13;
sub Main {&#13;
    RunOnStore(&#13;
        'Store' =&gt; GetTestSite(),&#13;
        'Sub'   =&gt; sub {&#13;
&#13;
            # tests&#13;
            ${cursor}&#13;
            done_testing();&#13;
        }&#13;
    );&#13;
}&#13;
&#13;
RunScript( Sub =&gt; \&amp;Main );&#13;
&#13;
1;</template><template context="perl" description="TestInteger" enabled="true" name="TestInteger">TestInteger('${Parameter}',$$${Parameter});</template><template context="perl" description="epages perl script skeleton using RunOnStore" enabled="true" name="epagesScriptSkeletonWithRunOnStore">use strict;&#13;
use DE_EPAGES::Core::API::Error qw ( ExistsError GetError );&#13;
use DE_EPAGES::Core::API::Script qw ( RunScript );&#13;
use DE_EPAGES::Core::API::Warning qw ( Warning );&#13;
use DE_EPAGES::Database::API::Connection qw ( RunOnStore );&#13;
use DE_EPAGES::WebInterface::API::MessageCenter qw ( SynchronizeCache );&#13;
use Getopt::Long;&#13;
use Time::HiRes qw ( time );&#13;
&#13;
sub Main {&#13;
&#13;
    local $$| = 1;&#13;
&#13;
    my $$Password;&#13;
    my $$StoreName;&#13;
    my $$Help;&#13;
    my $$NoOutput;&#13;
&#13;
    GetOptions(&#13;
        'help'        =&gt; \$$Help,&#13;
        'nooutput'    =&gt; \$$NoOutput,&#13;
        'passwd=s'    =&gt; \$$Password,&#13;
        'storename=s' =&gt; \$$StoreName,&#13;
    );&#13;
&#13;
    usage() if $$Help;&#13;
&#13;
    my $$time1 = time;&#13;
&#13;
    RunOnStore(&#13;
        Store      =&gt; $$StoreName,&#13;
        DBPassword =&gt; $$Password,&#13;
        Sub        =&gt; sub {&#13;
            ${RunMethod}();&#13;
        }&#13;
    );&#13;
    my $$time2   = time;&#13;
    my $$seconds = $$time2 - $$time1;&#13;
    my $$logmsg  = sprintf( 'need %.3f seconds', $$seconds );&#13;
    print $$logmsg. "\n" unless $$NoOutput;&#13;
&#13;
    # you need SynchronizeCache if you have manipulated any&#13;
    # objects during the runtime of this script.&#13;
    eval { SynchronizeCache(); };&#13;
    Warning( GetError() ) if ExistsError();&#13;
}&#13;
&#13;
sub ${RunMethod} {&#13;
    my %Arguments = @_;&#13;
    ${cursor}&#13;
    return;&#13;
}&#13;
&#13;
sub usage {&#13;
    print &lt;&lt;END_USAGE;&#13;
Usage:&#13;
    perl $$0 [options] [flags]&#13;
&#13;
options:&#13;
    -passwd       database user password              ()&#13;
    -storename    name of store                       (Store)&#13;
&#13;
flags:&#13;
    -nooutput   do not print any output&#13;
    -help       show the command line options&#13;
&#13;
Example:&#13;
    perl $$0 -storename Store&#13;
END_USAGE&#13;
    exit 2;&#13;
}&#13;
&#13;
RunScript( 'Sub' =&gt; \&amp;Main );</template><template context="perl" description="perl skeleton for epages packages using Exporter.pm" enabled="true" name="epagesPackageSkeletonWithExporter">#========================================================================================&#13;
# §package      DE_EPAGES::${Package}&#13;
# §base         Exporter&#13;
# §state        public&#13;
# §description  ${Description}&#13;
#========================================================================================&#13;
package DE_EPAGES::${Package};&#13;
use base Exporter;&#13;
&#13;
use strict;&#13;
&#13;
our @EXPORT_OK = qw (&#13;
  ${MySub}&#13;
);&#13;
&#13;
sub ${MySub} {&#13;
    ${cursor}&#13;
}&#13;
&#13;
1;</template><template context="perl" description="epages perl skeleton for tle handler" enabled="true" name="ePagesTLESkeleton">#========================================================================================&#13;
# §package      ${Package}::API::TLE::${TLEHandler}&#13;
# §state        public&#13;
# §description  TLEHandler '${TLEHandler}'. Respoonsible for TLE function ${MyTLE}&#13;
#========================================================================================&#13;
package ${Package}::API::TLE::${TLEHandler};&#13;
&#13;
use strict;&#13;
&#13;
sub new {&#13;
    my $$class = shift;&#13;
    my %args  = @_;&#13;
    my $$self  = bless {}, $$class;&#13;
    return $$self;&#13;
}&#13;
&#13;
sub ${MyTLE} {&#13;
    my $$self = shift; &#13;
    my ($$Processor, $$aParams) = @_; &#13;
&#13;
    ${cursor}&#13;
}&#13;
&#13;
sub RegisterHandlerProc { &#13;
    my ($$Params) = @_; &#13;
    __PACKAGE__-&gt;new()-&gt;register( $$Params-&gt;{'Processor'} );&#13;
    return; &#13;
} &#13;
&#13;
sub register { &#13;
    my $$self = shift; &#13;
    my ($$Processor) = @_; &#13;
    $$Processor-&gt;registerHandler('FunctionHandler', $$self, '${MyTLE}');&#13;
    return; &#13;
} &#13;
&#13;
1;</template><template context="perl" description="use Digest::MD5" enabled="true" name="useMD5">use Digest::MD5 qw (md5_hex);</template><template context="perl" description="Polling Shop.pm MBO Sub-Routine" enabled="true" name="ep6_300_k3em5">sub ManagePolling {&#13;
	my $$self = shift; # remove self from arguments&#13;
	my ($$Servlet) = @_; # get servlet object from args&#13;
	my $$Shop = $$Servlet-&gt;object; # get shop object &#13;
	my $$Form = $$Servlet-&gt;form; # get form object&#13;
 # read form values for polling attributes&#13;
	my $$PollingA = $$Form-&gt;value('PollingA');&#13;
	return unless $$PollingA =~ /^[0-9]+$$/;&#13;
 	my $$PollingB = $$Form-&gt;value('PollingB');&#13;
 	return unless $$PollingB =~ /^[0-9]+$$/;&#13;
	my $$PollingC = $$Form-&gt;value('PollingC');&#13;
	return unless $$PollingC =~ /^[0-9]+$$/;&#13;
&#13;
    # get polling object&#13;
    use Training::Polling::API::PollingResult qw( GetOrCreatePollingResult );&#13;
    my $$PollingResult = GetOrCreatePollingResult($$Shop);&#13;
&#13;
    # set polling attributes&#13;
    $$PollingResult-&gt;set({&#13;
        'PollingA'=&gt;$$PollingA // 0,&#13;
        'PollingB'=&gt;$$PollingB // 0,&#13;
        'PollingC'=&gt;$$PollingC // 0,&#13;
    });&#13;
    return;&#13;
}</template><template context="perl" description="Use Hook in MyEvents Cartridge: Exercise" enabled="true" name="ep6_410_b43f49">package Training::MyEvents::Hooks::ExportCustomer;&#13;
use base "Exporter";&#13;
&#13;
use DE_EPAGES::Core::API::Log qw (LogDebug GetLog);&#13;
use strict;&#13;
&#13;
sub OnUpdateAddress {&#13;
    my ($$hParams) = @_;&#13;
    my $$AddressID = $$hParams-&gt;{'AddressID'};&#13;
    GetLog-&gt;info("ExportCustomer was just triggered by OBJ_AfterUpdateAddress hook. AddressID: $$AddressID ");&#13;
    LogDebug( '$$hParams', $$hParams );&#13;
}&#13;
&#13;
1;</template><template context="perl" description="Expand Hook Module: Optional Exercise" enabled="true" name="ep6_410_b4tnir">package Training::MyEvents::Hooks::ExportCustomer;&#13;
use base 'Exporter';&#13;
&#13;
use strict;&#13;
&#13;
use DE_EPAGES::Core::API::File qw ( ConvertPathChars WriteFile );&#13;
use DE_EPAGES::Core::API::String qw ( QuoteXML );&#13;
&#13;
sub OnUpdateAddress {&#13;
    my ($$hParams) = @_;&#13;
&#13;
    my $$Address = $$hParams-&gt;{'Object'};&#13;
    return unless $$Address-&gt;parent-&gt;instanceOf('Customer');&#13;
&#13;
    my $$FirstName = QuoteXML( $$Address-&gt;get('FirstName') );&#13;
    my $$LastName  = QuoteXML( $$Address-&gt;get('LastName') );&#13;
    my $$Alias     = QuoteXML( $$Address-&gt;alias );              # other atts, too...&#13;
    my $$Content   = &lt;&lt;EOL;&#13;
&lt;?xml version="1.0"?&gt;&#13;
&lt;users&gt;&#13;
  &lt;user&gt;&#13;
    &lt;id&gt;$$Alias&lt;/id&gt;&#13;
    &lt;first_name&gt;$$FirstName&lt;/first_name&gt;&#13;
    &lt;last_name&gt;$$LastName&lt;/last_name&gt;&lt;!-- more att tags... --&gt;&#13;
  &lt;/user&gt;&#13;
&lt;/users&gt;&#13;
EOL&#13;
&#13;
    WriteFile( $$ENV{EPAGES_WEBROOT} . '/TrainingExport/' . 'Epages_updated_customer_' . ConvertPathChars($$Alias) . '.xml',&#13;
        \$$Content, { create_directory =&gt; 1 } );&#13;
&#13;
}&#13;
&#13;
1;</template><template context="perl" description="" enabled="true" name="usestrict">use strict;</template><template context="perl" description="Doc separation line" enabled="true" name="#---------">#----------------------------------------------------------------------------------------</template><template context="perl" description="my ($Arguments) = @_;" enabled="true" name="@_">my ($$Arguments) = @_;</template><template context="perl" description="was man so als erstes in eine Klassekippen muss" enabled="true" name="classStart">${filename}</template><template context="perl" description="" enabled="true" name="TestString">TestString('${Keyword}', $$${Keyword});</template><template context="perl" description="Errorhandling" enabled="true" name="Error(">Error( 'MissingParameter', { Parameter =&gt; 'Value' } ) unless $$Value;</template><template context="perl" description="writes the self variabel dereferencing" enabled="true" name="self">$$self-&gt;</template><template context="perl" description="ProhibitPathConcatenation" enabled="true" name="ProhibitPathConcatenation">ProhibitPathConcatenation</template><template context="perl" description="ProhibitPrivateSubroutineUse" enabled="true" name="ProhibitPrivateSubroutineUse">ProhibitPrivateSubroutineUse</template><template context="perl" description="ProhibitMagicNumbers" enabled="true" name="ProhibitMagicNumbers">ProhibitMagicNumbers</template><template context="perl" description="dereferencing self object" enabled="true" name="self-&gt;">$$self-&gt;</template><template context="perl" description="eval which forward the nativdie" enabled="true" name="evalnativdie">eval {
    ${cursor}
};
if (ExistsError()) {
    my $$Error = GetError();
 	Error($$Error) if ( $$Error-&gt;code eq 'NativDie' );
    LogError($$Error);
}</template><template context="perl" description="isa_ok from More package" enabled="true" name="isa_ok">isa_ok($$object, 'DE_EPAGES::Object::API::Object::Object');</template><template context="perl" description="perl more is" enabled="true" name="is">is($$${TestValue},$$${ExpectedValue},'Test was fine') or diag "The Value:$$${TestValue} is not: $$${ExpectedValue}";</template><template context="perl" description="unless defined $var" enabled="true" name="unless defined">unless defined ${cursor};</template><template context="perl" description="Test Perl more is_deeply" enabled="true" name="is_deeply(">is_deeply($$got_complex_structure, $$expected_complex_structure, 'description');</template><template context="perl" description="" enabled="true" name="myDumper">use Data::Dumper;
warn Dumper ${cursor}</template><template context="perl" description="print Dumper ${cursor};" enabled="true" name="printdumper">use Data::Dumper;
print Dumper ${cursor};</template><template context="perl" description="" enabled="true" name="warndumper">use Data::Dumper;
warn Dumper ${cursor};</template><template context="perl" description="return unless defined ${cursor};" enabled="true" name="returnunlessdefined">return unless defined ${cursor};</template><template context="perl" description="return ${cursor};" enabled="true" name="return">return ${cursor};</template><template context="perl" description="TestArray('name',$name');" enabled="true" name="TestArray">TestArray('${Keyword}', $$${Keyword});</template><template context="perl" description="note ('--------------------------------------------------');" enabled="true" name="NoteLn">note ('--------------------------------------------------');</template><template context="perl" description="note('');" enabled="true" name="note">note('${cursor}');</template><template context="perl" description="object handling without database connection" enabled="true" name="useBaseObject">use base DE_EPAGES::Core::API::Object::BaseObject;</template><template context="perl" description="isValid" enabled="true" name="isValid">isValid(${cursor})</template><template context="perl" description="push" enabled="true" name="push">push(@{${cursor}},$$Value);</template><template context="perl" description="helps to generate all neede elements for a simple package " enabled="true" name="package starter"># §package      ${packagename}
# §state        public
#----------------------------------------------------------------------------------------
# §description  description
#----------------------------------------------------------------------------------------
# §example      example
#========================================================================================
package ${packagename};

use strict;

#========================================================================================
# §function     new
# §state        public
#----------------------------------------------------------------------------------------
# §syntax       new( );
#----------------------------------------------------------------------------------------
# §description  constuctor
#----------------------------------------------------------------------------------------
# §return       $$self | self | ${packagename}
#========================================================================================
sub new {
    my $$class = shift;
    my %args  = @_;
    my $$self  = bless {}, $$class;
    return $$self;
}

${cursor}

1;</template><template context="perl" description="anti pokemon exception" enabled="true" name="eval">eval {
    ${cursor}
};
if ( ExistsError() ) {
    my $$Error = GetError();
    if ( $$Error-&gt;code() eq 'ExceptedErrorCode' ) {
        # do your magic
    } else {
        Error($$Error); #forward all other Errors
    }
}</template><template context="perl" description="test with import xml based on core " enabled="true" name="test import xml">package ${packagename};
use base DE_EPAGES::Shop::API::TestImportXML;

use Test::More;

use strict;

#----------------------------------------------------------------------------------------
# Wrap for DE_EPAGES::Shop::API::TestImportXML
# You need to override this methods in other to use
#----------------------------------------------------------------------------------------
sub shopAlias {
    return 'ShopAliasInTheXMLFile';
}
sub importXMLPath {
    return 'RelativePath/ShopXMLs.xml';
}
#----------------------------------------------------------------------------------------

sub test {
    my $$self = shift;
    $$self-&gt;;test_something();
    done_testing();
}

sub test_something {
    my $$self = shift;
    my $$SubTestName = (caller(0))[3];

    ok(1,"$$SubTestName - tests if something is fine");
    return;
}


__PACKAGE__-&gt;runScript();


1;</template><template context="perl" description="sub test" enabled="true" name="subtest">sub test${Something} {
    my $$SubTestName = (caller(0))[3];
     ok(0,"$$SubTestName - explain what is tested - explain what you espected");
}</template></templates>